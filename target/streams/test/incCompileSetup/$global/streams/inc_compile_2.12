format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
23 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/codility/BinaryGapSpec.class
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/samples/Solution$.class
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/samples/Solution.class
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/samples/SolutionSpec.class
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/search/ConnectedCellSpec.class
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/search/MissingNumberSpec.class
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/search/SherlockArrraySpec.class
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/InsertionSort1Spec.class
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/InsertionSort2Spec.class
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/MatrixRotationSpec.class
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/QuickSort1Spec.class
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/QuickSort2Spec.class
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/QuickSortInPlaceSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/AlternatingCharactersSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/AnagramPalindromeSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/AnagramWordSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/FunnyWordSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/GemeStoneSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/PalindromeLetterSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/PangramSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/ReverseShuffleMergeSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/SherlockAnagramSpec.class
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> /Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/SteadyGeneSpec.class
binary dependencies:
83 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> /Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> /Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> /Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
1 items
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> /Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala
member reference external dependencies:
20 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> codility.BinaryGapSolution$
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> search.ConnectedCellSolution$
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> search.MissingNumberSolution$
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> search.SherlockArraySolution$
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> sorting.InsertionSort1$
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> sorting.InsertionSort2$
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> sorting.MatrixRotation$
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> sorting.QuickSort1$
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> sorting.QuickSort2$
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> sorting.QuickSortInPlace$
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> strings.AlternatingSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> strings.AnagramPalindromeSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> strings.AnagramSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> strings.FunnyWordSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> strings.GemeStoneSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> strings.PalindromeLetterSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> strings.PangramSolution$
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> strings.ReverseShuffleMerge$
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> strings.SherlockAnagram$
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> strings.SteadyGeneSolution$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
23 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> codility.BinaryGapSpec
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> samples.Solution
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> samples.Solution$
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> samples.SolutionSpec
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> search.ConnectedCellSpec
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> search.MissingNumberSpec
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> search.SherlockArrraySpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> sorting.InsertionSort1Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> sorting.InsertionSort2Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> sorting.MatrixRotationSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> sorting.QuickSort1Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> sorting.QuickSort2Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> sorting.QuickSortInPlaceSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> strings.AlternatingCharactersSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> strings.AnagramPalindromeSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> strings.AnagramWordSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> strings.FunnyWordSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> strings.GemeStoneSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> strings.PalindromeLetterSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> strings.PangramSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> strings.ReverseShuffleMergeSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> strings.SherlockAnagramSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> strings.SteadyGeneSpec
used names:
773 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> BinaryGapSolution
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> BinaryGapSpec
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> codility
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> getMaximumBinaryGap
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> !=
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> &&
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> +
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> -
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> <
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> <=
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> ==
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> >
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> >=
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> AnyRef
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> Solution
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> current
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> direction
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> foreach
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> i
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> indices
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> intArrayOps
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> maxEnd
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> maxStart
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> maxSum
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> partialEnd
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> partialStart
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> partialSum
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> previousDirection
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> println
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> samples
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> ||
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Solution
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> SolutionSpec
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> samples
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> solution
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> +=
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> ArrayBuffer
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> ClassTag
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> ConnectedCellSolution
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> ConnectedCellSpec
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> ScalaRunTime
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> arrayClass
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> collection
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> foreach
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> i
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> indices
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> intArrayOps
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> it
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> j
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> materializeClassTag
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> mutable
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> package
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> positions
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> refArrayOps
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> reflect
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> runtime
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> search
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> test1
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> test2
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> toArray
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> MissingNumberSolution
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> MissingNumberSpec
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> it
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> missing
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> search
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> SherlockArraySolution
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> SherlockArrraySpec
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> String
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> it
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> search
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> InsertionSort1
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> InsertionSort1Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> sorting
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test1
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test1Solved
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test2
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test2Solved
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test3
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test3Solved
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test4
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test4Solved
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test5
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> test5Solved
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> InsertionSort2
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> InsertionSort2Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> sorting
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> test1
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> test1Solved
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> ClassTag
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> MatrixRotation
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> MatrixRotationSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> ScalaRunTime
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> arrayClass
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> materializeClassTag
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> package
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> reflect
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> runtime
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> sorting
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> test2x3
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> test2x3R1
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> test4x6
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> test4x6R1
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> QuickSort1
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> QuickSort1Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> sorting
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> QuickSort2
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> QuickSort2Spec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> sorting
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> QuickSortInPlace
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> QuickSortInPlaceSpec
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> Tables
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> sorting
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> AlternatingCharactersSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> AlternatingSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> countDeletions
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test1
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test1Count
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test2
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test2Count
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test3
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test3Count
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test4
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test4Count
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test5
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> test5Count
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> AnagramPalindromeSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> AnagramPalindromeSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> InvalidWord
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> OkWord1
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> OkWord2
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> OkWord3
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> hasAnagramPalindrome
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> AnagramSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> AnagramWordSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> foreach
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> i
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> intWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> it
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> length
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> solutions1
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> split
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> until
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> words1
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> FunnyWordSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> FunnyWordSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> it
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> word1
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> word2
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> ClassTag
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> GemeStoneSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> GemeStoneSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> it
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> materializeClassTag
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> package
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> reflect
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> rocks1
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> rocks2
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> rocks3
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> PalindromeLetterSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> PalindromeLetterSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> countOperations
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> isPalindrome
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test1
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test1Count
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test2
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test2Count
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test3
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test3Count
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test4
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> test4Count
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> InvalidPangram
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> OkPangram1
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> OkPangram2
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> PangramSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> PangramSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> isPangram
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> ReverseShuffleMerge
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> ReverseShuffleMergeSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> String
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> input
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> SherlockAnagram
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> SherlockAnagramSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> String
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> Table
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> TableAsserting
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> TableDrivenPropertyChecks
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> assertingNatureOfAssertion
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> enablers
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> forAll
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> prop
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> result
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> solve
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> testCases
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> word
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> *
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> +
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> -
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> <init>
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Array
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Byte
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> FlatSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Int
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> MAX_ELEMENTS
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Matchers
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Position
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Predef
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> Prettifier
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SampleGene
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SampleGene16
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SampleGene4
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SampleGene500000
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SampleGene8
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SampleGene82
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SteadyGeneSolution
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> SteadyGeneSpec
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> String
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> apply
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> convertToAnyShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> convertToInAndIgnoreMethods
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> convertToStringShouldWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> default
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> elements
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> floor
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> foreach
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> generate
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> getDistance
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> here
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> i
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> in
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> intWrapper
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> math
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> n
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> org
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> package
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> practicalMinimum
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> random
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> scala
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> scalactic
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> scalatest
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> shorthandTestRegistrationFunction
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> should
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> shouldBe
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> source
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> strings
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> testContainer1
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> testContainer2
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> testContainer3
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> to
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> toInt
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> update
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> wordBytes
product stamps:
23 items
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/codility/BinaryGapSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/samples/Solution$.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/samples/Solution.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/samples/SolutionSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/search/ConnectedCellSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/search/MissingNumberSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/search/SherlockArrraySpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/InsertionSort1Spec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/InsertionSort2Spec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/MatrixRotationSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/QuickSort1Spec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/QuickSort2Spec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/sorting/QuickSortInPlaceSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/AlternatingCharactersSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/AnagramPalindromeSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/AnagramWordSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/FunnyWordSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/GemeStoneSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/PalindromeLetterSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/PangramSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/ReverseShuffleMergeSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/SherlockAnagramSpec.class -> lastModified(1487698387000)
/Users/alex/dev/practice/coding/target/scala-2.12/test-classes/strings/SteadyGeneSpec.class -> lastModified(1487698387000)
source stamps:
22 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> hash(0ba51b3fb6634e675585f518af41a860b16f4e37)
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> hash(d00ba9fcdef1326ed006eb9bc2cd05f6ec1ef813)
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> hash(855ab472d5438d5bc81ac324f0159f8caf803dab)
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> hash(7af797f6157439aee5ad7fba5ff24cae71c95767)
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> hash(3d6709f350e9cc3f0497f2adee3510e822176f86)
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> hash(26ccdf230c1a35259d7ef9917feaeb13c4246bc5)
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> hash(a220f02d049fa90cb1f993e0989fa0e46563125c)
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> hash(32d38d83f0493dd28533fccd4fde6593547e122f)
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> hash(5f9445a788a5a9a4dcb04a2618c83c5172acbf94)
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> hash(95c6226ba3fd361c5fd58af22debe16d4cf6312a)
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> hash(62fc2a79bce2b7fd4761de3b8dec85216df2b9b7)
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> hash(d58c3a3d9c36887e225f9459210441c7545037c4)
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> hash(20da207cf4bfa69872f830a535929c3e407a1270)
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> hash(c10eb3e8defa789f1b573f7526aee66da3844070)
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> hash(59c8ac1e6d3ea488f0f8c1931d0d957bd296e64a)
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> hash(4e7dfc21da2232a38c5187720be3f62d69552bd5)
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> hash(bd7ab24c6198343863216d60c82dd50cd75a9815)
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> hash(c56cc3977db42fd58e85aba810163ea2de5adf4a)
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> hash(943a93bfde542681ea41bcb370bfdc09fc3a8da1)
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> hash(a7d5245c4d4018a944a6fa4696af17df6859794f)
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> hash(7259de5598691efe9b93fcaafbb61e90a5ec1482)
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> hash(66da2d75070f932bc3fd830b21da2cbd3093d4bf)
binary stamps:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1438711540000)
/Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/alex/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.runtime.RichInt
/Users/alex/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.source.Position$
/Users/alex/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.Matchers
internal apis:
22 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBY3YDjAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cEHJmjZ0AAZub3RpZnlzcQB+AAyUyVjVdAAIU29sdXRpb25zcQB+AAy581iNdAAEd2FpdHNxAH4ADFbTQUp0AA0kYXNJbnN0YW5jZU9mc3EAfgAMot+AgnQABmVxdWFsc3NxAH4ADIga0Kt0AAxhc0luc3RhbmNlT2ZzcQB+AAx0TWS6dAAMc3luY2hyb25pemVkc3EAfgAMZhRe2XQADSRpc0luc3RhbmNlT2ZzcQB+AAyGoaYQdAAJbm90aWZ5QWxsc3EAfgAMmoLIwXQADGlzSW5zdGFuY2VPZnNxAH4ADFEcyXh0AAhzb2x1dGlvbnNxAH4ADLSCvel0AAI9PXNxAH4ADIWrVRR0AAVjbG9uZXNxAH4ADImzveB0AAh0b1N0cmluZ3NxAH4ADIlGoc50AAIhPXNxAH4ADPLPh+V0AAhnZXRDbGFzc3NxAH4ADImCJ0F0AAJuZXNxAH4ADEw5YDZ0AAJlcXNxAH4ADMRQiQJ0AAIjI3NxAH4ADJjnNF90AAhmaW5hbGl6ZXNxAH4ADCL8JxF0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEF4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0ABBzYW1wbGVzLlNvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AWnhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWQBwc3EAfgBec3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEFMAAlpbmhlcml0ZWRxAH4AQUwAB3BhcmVudHNxAH4AQXhxAH4AYnNxAH4AWQBwc3EAfgBedXEAfgA8AAAAAHNxAH4AWQBwc3EAfgBedXEAfgA8AAAAAHNxAH4AWQBwc3EAfgBedXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBhdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBhc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB+dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB/c3EAfgBydAADQW55c3EAfgB2c3EAfgB5dXEAfgB8AAAAAnNxAH4AfnQABXNjYWxhcQB+AIV1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAdzYW1wbGVzc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFaYbuamHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD4vVXNlcnMvYWxleC9kZXYvcHJhY3RpY2UvY29kaW5nL3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFNALqfze8TJu0Abrm8LNBfbsHvgT
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHB3WpXsAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAOc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwupn1bHQAI2NvbnZlcnRUb1N0cmluZ1Nob3VsZFdyYXBwZXJGb3JWZXJic3EAfgALnSZiV3QAGWNvbnZlcnRUb1N0cmluZ0NhbldyYXBwZXJzcQB+AAtvM00FdAAZY29udmVydFRvQW55U2hvdWxkV3JhcHBlcnNxAH4AC3XY/lF0ACJjb252ZXJ0TnVtZXJpY1RvUGx1c09yTWludXNXcmFwcGVyc3EAfgALJFK5YXQAEmNvbnZlcnRUb0VxdWFsaXplcnNxAH4ACyCb0ZV0AChjb252ZXJ0VG9JbkFuZElnbm9yZU1ldGhvZHNBZnRlclRhZ2dlZEFzc3EAfgAL0GRZwnQAJ3Nob3J0aGFuZFNoYXJlZFRlc3RSZWdpc3RyYXRpb25GdW5jdGlvbnNxAH4AC3fopON0ABVjb252ZXJ0VG9SZWdleFdyYXBwZXJzcQB+AAvuf+NmdAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgALaz8ffHQAIWNvbnZlcnRUb1N0cmluZ011c3RXcmFwcGVyRm9yVmVyYnNxAH4AC6jdcwR0ABtjb252ZXJ0VG9JbkFuZElnbm9yZU1ldGhvZHNzcQB+AAtrYwkbdAAcY29udmVydFRvU3RyaW5nU2hvdWxkV3JhcHBlcnNxAH4AC6lqKj50ACtjb252ZXJ0U3ltYm9sVG9IYXZlUHJvcGVydHlNYXRjaGVyR2VuZXJhdG9yc3EAfgAL7Bfxp3QAIXNob3J0aGFuZFRlc3RSZWdpc3RyYXRpb25GdW5jdGlvbnVxAH4ACQAAAO5zcQB+AAs7KSVIdAALaW5PcmRlck9ubHlzcQB+AAt2ZEQVdAAGYXNzZXJ0c3EAfgALcQqgMnQAHlJlc3VsdE9mU3RhcnRXaXRoV29yZEZvclN0cmluZ3NxAH4AC3iOxAx0AAdzdWNjZWVkc3EAfgAL5TQJSXQAElBsdXNPck1pbnVzV3JhcHBlcnNxAH4ACydKa5R0AAZub3RpZnlzcQB+AAv16A9AdAAmbG93UHJpb3JpdHlDb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAtH6prkdAAJc2hvdWxkTm90c3EAfgALOnFNZ3QABXJlZ2V4c3EAfgALrieMunQABkFuV29yZHNxAH4ACwi9tlp0ABBBc3NlcnRpb25zSGVscGVyc3EAfgALitUquHQABmNhbmNlbHNxAH4ACwi18Gt0ABFleGVjdXRlJGRlZmF1bHQkMnNxAH4ACzEiXHF0AAlpbnRlcmNlcHRzcQB+AAuC2c3adAAEZmFpbHNxAH4AC/vmaj90ABRJdFZlcmJTdHJpbmdUYWdnZWRBc3NxAH4ACwSZPfl0AARuYW1lc3EAfgALdXypGXQAAmluc3EAfgALAFmQ3HQAHEhhdmVQcm9wZXJ0eU1hdGNoZXJHZW5lcmF0b3JzcQB+AAutCVMsdAAFQVdvcmRzcQB+AAs93A2wdAAEaGF2ZXNxAH4AC5u4WAR0ABRhc3NlcnREb2VzTm90Q29tcGlsZXNxAH4AC/FV9u50ABFleGVjdXRlJGRlZmF1bHQkNHNxAH4AC5tknhh0ACJSZXN1bHRPZkNvbnRhaW5Xb3JkRm9yQ29sbGVjdGVkQW55c3EAfgALbG5sXXQAAmlzc3EAfgAL9H5BznQAB2V4ZWN1dGVzcQB+AAvrP4ZYdAAEd2FpdHNxAH4AC6E8w890AA5EZXRlcm1pbmVkV29yZHNxAH4AC9CV9Xt0AAt0ZXN0RGF0YUZvcnNxAH4AC8HhSgB0ABNjcmVhdGVDYXRjaFJlcG9ydGVyc3EAfgALMezBnnQAAjw9c3EAfgAL+jhZZXQACXN0eWxlTmFtZXNxAH4AC0SoKBF0AA1sZWZ0U2lkZVZhbHVlc3EAfgALinzz13QAE2F0TGVhc3RPbmVFbGVtZW50T2ZzcQB+AAuwO+Q1dAANJGFzSW5zdGFuY2VPZnNxAH4AC/9RO7l0AAVlbXB0eXNxAH4AC3/2vLZ0AAlzdGFydFdpdGhzcQB+AAu3agfvdAAEc2l6ZXNxAH4AC45wAV50ABFleGVjdXRlJGRlZmF1bHQkM3NxAH4AC0DI+QZ0ABRSZXN1bHRPZkNvbGxlY3RlZEFueXNxAH4AC9TATd90AA1hbGxFbGVtZW50c09mc3EAfgALMXrGl3QABWV4aXN0c3EAfgALTor8iHQAB09rV29yZDFzcQB+AAuwaoLFdAAJY29uZmlnTWFwc3EAfgALfhTOCXQACVZhbHVlV29yZHNxAH4AC2oKDrF0AAZlcXVhbHNzcQB+AAslPhmNdAAMYXRMZWFzdE9uZU9mc3EAfgALFZ3sBnQAB2F0TGVhc3RzcQB+AAs2VUtZdAAIdGhyb3duQnlzcQB+AAtL1m4sdAAsY29udmVydEVxdWl2YWxlbmNlVG9BVG9CQ29udmVyc2lvbkNvbnN0cmFpbnRzcQB+AAsiWGaHdAAPZGVmYXVsdEVxdWFsaXR5c3EAfgAL8lFkMHQAImNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnN0cmFpbnRzcQB+AAsW1CvodAAcUmVzdWx0T2ZFbmRXaXRoV29yZEZvclN0cmluZ3NxAH4AC+Omcf10AARtdXN0c3EAfgAL0PH0i3QAA2FsbHNxAH4AC8TtUvp0AAR0YWdzc3EAfgALMm+/SXQADGFzSW5zdGFuY2VPZnNxAH4AC28s28d0AAE8c3EAfgALN4SsBHQABWFsZXJ0c3EAfgALt1W3yXQAB2luT3JkZXJzcQB+AAuTYhGndAAKcHJldHRpZmllcnNxAH4ACx8jGP10AANydW5zcQB+AAuYOml/dAARRGVjaWRlZEJ5RXF1YWxpdHlzcQB+AAsRa6e0dAAFZXZlcnlzcQB+AAs+RsRVdAAGc2NvcGVzc3EAfgALsSQVDHQAA3Bvc3NxAH4ACz/kwf90AAp3aXRoR3JvdXBzc3EAfgALlCLOYnQADHN5bmNocm9uaXplZHNxAH4AC+rDvEx0AAJpdHNxAH4AC9OJRlp0AAdLZXlXb3Jkc3EAfgALv4N98HQAEXRoZVNhbWVFbGVtZW50c0Fzc3EAfgALpfeA3nQADmFzc2VydENvbXBpbGVzc3EAfgAL0cK8BnQAFGNoZWNrUmVnZXgkZGVmYXVsdCQyc3EAfgALxBcib3QACmRldGVybWluZWRzcQB+AAv3GgspdAABYXNxAH4AC35efih0AAxhc3NlcnRUaHJvd3NzcQB+AAuWHw/BdAAObGVmdFNpZGVTdHJpbmdzcQB+AAvAqAzmdAANJGlzSW5zdGFuY2VPZnNxAH4AC/yR17d0AAR0cmFwc3EAfgALlFsrj3QAFXRlc3REYXRhRm9yJGRlZmF1bHQkMnNxAH4ACz9L1HZ0ABJJbkFuZElnbm9yZU1ldGhvZHNzcQB+AAvVKhfudAAMYXNzZXJ0UmVzdWx0c3EAfgALTcJujXQAHlJlc3VsdE9mTm90V29yZEZvckNvbGxlY3RlZEFueXNxAH4AC6uQ5YZ0AAI+PXNxAH4AC3B9XiZ0AAxvbmVFbGVtZW50T2ZzcQB+AAtF01WpdAAXU3RyaW5nQ2FuV3JhcHBlckZvclZlcmJzcQB+AAuFZcsedAAEdGV4dHNxAH4AC6/f4Jt0ACVSZXN1bHRPZkluY2x1ZGVXb3JkRm9yQ29sbGVjdGVkU3RyaW5nc3EAfgALRj/WFnQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQlRvQUNvbnZlcnNpb25Db25zdHJhaW50c3EAfgAL/XXVM3QAFUFuYWdyYW1QYWxpbmRyb21lU3BlY3NxAH4AC5Nol910AAdjb250YWluc3EAfgALQYokgHQABHRoZXlzcQB+AAtPgf1XdAALSW52YWxpZFdvcmRzcQB+AAuBEXSGdAAHY29tcGlsZXNxAH4ACxY94BF0ABFleGVjdXRlJGRlZmF1bHQkN3NxAH4AC/YYOlZ0AAdleGFjdGx5c3EAfgALAiJrcHQAEXRoZVNhbWVJbnN0YW5jZUFzc3EAfgALM6WtLHQAJ1Jlc3VsdE9mU3RhcnRXaXRoV29yZEZvckNvbGxlY3RlZFN0cmluZ3NxAH4AC1qN8zh0ABFpbk9yZGVyRWxlbWVudHNPZnNxAH4AC+utm9B0AAdPa1dvcmQyc3EAfgAL+GRj73QAC0RlY2lkZWRXb3Jkc3EAfgALHO1r/nQAFXR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC6abuOp0AAMhPT1zcQB+AAsJ+XssdAAGYXRNb3N0c3EAfgALkoY+M3QABGluZm9zcQB+AAvu6LU2dAALbm9FeGNlcHRpb25zcQB+AAtKcTzzdAAJbm90aWZ5QWxsc3EAfgAL9P444HQADEl0VmVyYlN0cmluZ3NxAH4AC2qWij50AAt3aXRoRml4dHVyZXNxAH4ACyrPI3V0AAdydW5UZXN0c3EAfgALdk4+5HQAHVJlc3VsdE9mQmVXb3JkRm9yQ29sbGVjdGVkQW55c3EAfgALcxc0OXQAA2tleXNxAH4ACworIQ50AAxpc0luc3RhbmNlT2ZzcQB+AAsArhmZdAAId2l0aENsdWVzcQB+AAsP/USudAAQYXNzZXJ0aW9uc0hlbHBlcnNxAH4AC5op5ZF0ABFleGVjdXRlJGRlZmF1bHQkNnNxAH4ACwgtlst0AAdPa1dvcmQzc3EAfgALSwA6d3QACHRhZ2dlZEFzc3EAfgALYDO9JHQAD2Fzc2VydFR5cGVFcnJvcnNxAH4AC8SqaWV0ACVSZXN1bHRPZkVuZFdpdGhXb3JkRm9yQ29sbGVjdGVkU3RyaW5nc3EAfgAL9Wj/RnQABm1hcmt1cHNxAH4AC5bldrF0AAhsZWZ0U2lkZXNxAH4ACx6w+ip0AAY8aW5pdD5zcQB+AAtEWKlYdAALbWFjcm9Bc3N1bWVzcQB+AAt4qepTdAAPcnVuTmVzdGVkU3VpdGVzc3EAfgALq1GkrXQAGVJlc3VsdE9mSGF2ZVdvcmRGb3JFeHRlbnRzcQB+AAv1lTtYdAADY2Fuc3EAfgAL/c9lb3QABWJlaW5nc3EAfgAL9kV3mnQABWVxdWFsc3EAfgALS0IC4HQABkl0V29yZHNxAH4AC5gjXAl0AAhhcmVFcXVhbHNxAH4AC3deeSd0AAZub25lT2ZzcQB+AAskrYMadAAFYXBwbHlzcQB+AAu/31CLdAAJd2l0aEdyb3Vwc3EAfgALfisCjXQABWFmdGVyc3EAfgALTmggwHQACUVxdWFsaXplcnNxAH4AC611xbl0AAphZnRlckJlaW5nc3EAfgALaS9TvnQAG25ld0Fzc2VydGlvbkZhaWxlZEV4Y2VwdGlvbnNxAH4ACxhylFJ0AARub3Rlc3EAfgALyzyiQXQAAj09c3EAfgALxkhYmXQAH0luQW5kSWdub3JlTWV0aG9kc0FmdGVyVGFnZ2VkQXNzcQB+AAsFTDm0dAACYnlzcQB+AAsk1rv3dAAGc29ydGVkc3EAfgALCFHxXnQACmZ1bGx5TWF0Y2hzcQB+AAs8uTQDdAAFY2xvbmVzcQB+AAuYgG1xdAAMQmVoYXZpb3JXb3Jkc3EAfgALFeDViHQAE1N0cmluZ1Nob3VsZFdyYXBwZXJzcQB+AAuYgeK4dAAGc2hvdWxkc3EAfgALv2Cu4nQAEEFueVNob3VsZFdyYXBwZXJzcQB+AAv3YbKOdAAXRGV0ZXJtaW5lZEJ5RXF1aXZhbGVuY2VzcQB+AAtbtPxxdAADbm90c3EAfgALR3pzlnQAH1Jlc3VsdE9mQmVXb3JkRm9yQ29sbGVjdGVkQXJyYXlzcQB+AAuHFN2+dAAJZGVmaW5lZEF0c3EAfgALcmUxj3QADG5lc3RlZFN1aXRlc3NxAH4AC5R3yZt0AAZhc3N1bWVzcQB+AAsezmcCdAAGJGluaXQkc3EAfgALhyGjh3QAB2RlZmluZWRzcQB+AAt7j7h2dAAgbG93UHJpb3JpdHlUeXBlQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAvmx/rtdAAHaW5jbHVkZXNxAH4AC/vuvBx0AAhUaGV5V29yZHNxAH4AC6mP9cl0AAxyZWdpc3RlclRlc3RzcQB+AAsQK9cGdAAJdHlwZUNoZWNrc3EAfgALhdrQxXQAEWV4ZWN1dGUkZGVmYXVsdCQ1c3EAfgAL5XdwZ3QAAz09PXNxAH4AC2ao0ll0ABhuZXdUZXN0Q2FuY2VsZWRFeGNlcHRpb25zcQB+AAuUVbZwdAAHbWVzc2FnZXNxAH4ACze+KoF0AAh0b1N0cmluZ3NxAH4AC395WsJ0AAl0ZXN0TmFtZXNzcQB+AAtuvYAZdAAPeWVPbGRlVGVzdE5hbWVzc3EAfgALJklaK3QAAmFuc3EAfgALFoUWX3QABmxlbmd0aHNxAH4AC0JuT6x0ABhTdHJpbmdNdXN0V3JhcHBlckZvclZlcmJzcQB+AAtrOxBNdAARZXhlY3V0ZSRkZWZhdWx0JDFzcQB+AAvSKwsTdAACYmVzcQB+AAvKCxRHdAACIT1zcQB+AAuJEhJTdAAiUmVzdWx0T2ZIYXZlV29yZEZvckNvbGxlY3RlZEV4dGVudHNxAH4AC6umQv10AB9SZXN1bHRPZkZ1bGx5TWF0Y2hXb3JkRm9yU3RyaW5nc3EAfgALWzJpunQACmNoZWNrUmVnZXhzcQB+AAvdp5gOdAAMbWF0Y2hQYXR0ZXJuc3EAfgALdazxOHQAGElnbm9yZVZlcmJTdHJpbmdUYWdnZWRBc3NxAH4AC/rnBW10AAhnZXRDbGFzc3NxAH4AC/222zJ0ABNyZWdpc3Rlcklnbm9yZWRUZXN0c3EAfgAL2m3f0XQABmJlaGF2ZXNxAH4AC1MO32F0AAhydW5UZXN0c3NxAH4AC+ADK1R0AAhiZWhhdmlvcnNxAH4AC6PCQed0ABFwZW5kaW5nVW50aWxGaXhlZHNxAH4ACwVo88R0ABJhdE1vc3RPbmVFbGVtZW50T2ZzcQB+AAvB6anYdAAYdGhlU2FtZUVsZW1lbnRzSW5PcmRlckFzc3EAfgALClPDEHQAF1RoZVNhbWVJbnN0YW5jZUFzUGhyYXNlc3EAfgALySPjtXQADlRoZXlWZXJiU3RyaW5nc3EAfgALY0RNU3QADWFyZUVxdWl2YWxlbnRzcQB+AAumopIHdAAHYmV0d2VlbnNxAH4AC/NDbxl0AAdkZWNpZGVkc3EAfgALHo59lnQAFFJlc3VsdE9mQmVXb3JkRm9yQW55c3EAfgALs2+Ms3QAEWV4cGVjdGVkVGVzdENvdW50c3EAfgALX2uMBnQAB2VuZFdpdGhzcQB+AAuPSs6udAAMbm9FbGVtZW50c09mc3EAfgALnrT3i3QACHJlcnVubmVyc3EAfgALBj9jrHQAC3Nob3VsZEVxdWFsc3EAfgALE8UqhnQACVJlZ2V4V29yZHNxAH4AC9XcNht0AAxUaGVBZnRlcldvcmRzcQB+AAt0sqsVdAAiY29udmVydEVxdWl2YWxlbmNlVG9CVG9BQ29uc3RyYWludHNxAH4ACxiSZh50AAVvbmVPZnNxAH4AC6L249d0AAJuZXNxAH4AC+nLG/N0ABZUaGV5VmVyYlN0cmluZ1RhZ2dlZEFzc3EAfgAL7XWS2HQAAm5vc3EAfgALjpADLXQAKFJlc3VsdE9mRnVsbHlNYXRjaFdvcmRGb3JDb2xsZWN0ZWRTdHJpbmdzcQB+AAtiMGB/dAALZG9Db2xsZWN0ZWRzcQB+AAsjTkT1dAARQ2hlY2tpbmdFcXVhbGl6ZXJzcQB+AAtj5KfgdAAId3JpdGFibGVzcQB+AAsuUWL7dAAHcGVuZGluZ3NxAH4ACwCzFpZ0AAV2YWx1ZXNxAH4AC1xDMkx0AAZpZ25vcmVzcQB+AAtqjZlYdAAIc2hvdWxkQmVzcQB+AAuZOgCEdAAcUmVzdWx0T2ZJbmNsdWRlV29yZEZvclN0cmluZ3NxAH4AC7wpTIp0ABBJZ25vcmVWZXJiU3RyaW5nc3EAfgAL3MDkwXQAC21hY3JvQXNzZXJ0c3EAfgALNKicJXQAAmVxc3EAfgALmzZ+nXQAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgALvPzzc3QAAm9mc3EAfgALe3+dEXQAAistc3EAfgAL/2buvXQACU5vQXJnVGVzdHNxAH4ACwZ9okl0AApJZ25vcmVXb3Jkc3EAfgAL29VGdXQAAT5zcQB+AAuh2jSAdAAIcmVhZGFibGVzcQB+AAu0RU0rdAACIyNzcQB+AAs7WeNudAAaU3RyaW5nU2hvdWxkV3JhcHBlckZvclZlcmJzcQB+AAsbZmY/dAAIZmluYWxpemVzcQB+AAvm1u12dAAbY29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALF7SAhXQAC2F0TW9zdE9uZU9mc3EAfgALFSnSBXQABWFsbE9mc3EAfgALVzhzRnQACGhhc2hDb2Rlc3EAfgALGvc+R3QAB3N1aXRlSWRzcQB+AAv722sTdAAJc3VpdGVOYW1lc3EAfgALgA/ug3QADFJlZ2V4V3JhcHBlcnNxAH4ACxht6/F0AAN0aGVzcQB+AAtudMB9dAAGYXBwZW5kc3EAfgALPaHJtnQABG9ubHlzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgIPeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAdc3RyaW5ncy5BbmFncmFtUGFsaW5kcm9tZVNwZWN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAJ0ACdzY2FsYS5yZWZsZWN0Lm1hY3Jvcy5pbnRlcm5hbC5tYWNyb0ltcGx0ABBzY2FsYS5kZXByZWNhdGVkc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgIqeHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgIpAHBzcQB+Ai5zcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4CD0wACWluaGVyaXRlZHEAfgIPTAAHcGFyZW50c3EAfgIPeHEAfgIyc3EAfgIpAHBzcQB+Ai51cQB+AgoAAAAAc3EAfgIpAHBzcQB+Ai51cQB+AgoAAAAAc3EAfgIpAHBzcQB+Ai51cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAF3NyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADEwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AjF0AAhNYXRjaGVyc3NyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4CMXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AAx4cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAADb3Jnc3EAfgJOdAAJc2NhbGF0ZXN0c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+Ak9zcQB+AkJ0AApFeHBsaWNpdGx5c3EAfgJGc3EAfgJJdXEAfgJMAAAAA3NxAH4CTnQAA29yZ3NxAH4CTnQACXNjYWxhY3RpY3EAfgJVc3EAfgJCdAAMTWF0Y2hlcldvcmRzc3EAfgJGc3EAfgJJdXEAfgJMAAAABHNxAH4CTnQAA29yZ3NxAH4CTnQACXNjYWxhdGVzdHNxAH4CTnQABXdvcmRzcQB+AlVzcQB+AkJ0AAlUb2xlcmFuY2VxAH4CWHNxAH4CQnQACEZsYXRTcGVjcQB+AkhzcQB+AkJ0AAxGbGF0U3BlY0xpa2VxAH4CSHNxAH4CQnQAC0RvY3VtZW50aW5ncQB+AkhzcQB+AkJ0AAhBbGVydGluZ3EAfgJIc3EAfgJCdAAJTm90aWZ5aW5ncQB+AkhzcQB+AkJ0AAlJbmZvcm1pbmdxAH4CSHNxAH4CQnQAB0NhblZlcmJxAH4CYXNxAH4CQnQACE11c3RWZXJicQB+AmFzcQB+AkJ0AApTaG91bGRWZXJicQB+AmFzcQB+AkJ0ABBUZXN0UmVnaXN0cmF0aW9ucQB+AkhzcQB+AkJ0AAlUZXN0U3VpdGVxAH4CSHNxAH4CQnQABVN1aXRlcQB+AkhzcQB+AkJ0AAxTZXJpYWxpemFibGVzcQB+AkZzcQB+Akl1cQB+AkwAAAACc3EAfgJOdAAFc2NhbGFxAH4CVXNxAH4CQnEAfgKFc3EAfgJGc3EAfgJJdXEAfgJMAAAAA3NxAH4CTnQABGphdmFzcQB+Ak50AAJpb3EAfgJVc3EAfgJCdAAKQXNzZXJ0aW9uc3EAfgJIc3EAfgJCdAAMVHJpcGxlRXF1YWxzcQB+AlhzcQB+AkJ0ABNUcmlwbGVFcXVhbHNTdXBwb3J0cQB+AlhzcQB+AkJ0AAZPYmplY3RzcQB+AkZzcQB+Akl1cQB+AkwAAAADc3EAfgJOcQB+ApBzcQB+Ak50AARsYW5ncQB+AlVzcQB+AkJ0AANBbnlxAH4ChnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AAx4cHQAB3N0cmluZ3NzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphu5qYdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgAMTAAPc291cmNlRGlyZWN0b3J5cQB+AAx4cHQAPi9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvdGVzdC1jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUwQ6z6N76eJ8bVz91Jq7mbaOEQHA=
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCx0Ar0AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAOc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwpHVGtXQAI2NvbnZlcnRUb1N0cmluZ1Nob3VsZFdyYXBwZXJGb3JWZXJic3EAfgALI/nJRXQAGWNvbnZlcnRUb1N0cmluZ0NhbldyYXBwZXJzcQB+AAsl9sozdAAZY29udmVydFRvQW55U2hvdWxkV3JhcHBlcnNxAH4AC1bZOWZ0ACJjb252ZXJ0TnVtZXJpY1RvUGx1c09yTWludXNXcmFwcGVyc3EAfgALiJajc3QAEmNvbnZlcnRUb0VxdWFsaXplcnNxAH4AC6RoZ/t0AChjb252ZXJ0VG9JbkFuZElnbm9yZU1ldGhvZHNBZnRlclRhZ2dlZEFzc3EAfgAL/L4cJXQAJ3Nob3J0aGFuZFNoYXJlZFRlc3RSZWdpc3RyYXRpb25GdW5jdGlvbnNxAH4AC67A3Zh0ABVjb252ZXJ0VG9SZWdleFdyYXBwZXJzcQB+AAvFzKEndAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgALuWuqGHQAIWNvbnZlcnRUb1N0cmluZ011c3RXcmFwcGVyRm9yVmVyYnNxAH4AC7B9Cjt0ABtjb252ZXJ0VG9JbkFuZElnbm9yZU1ldGhvZHNzcQB+AAtMbxcvdAAcY29udmVydFRvU3RyaW5nU2hvdWxkV3JhcHBlcnNxAH4AC7xold90ACtjb252ZXJ0U3ltYm9sVG9IYXZlUHJvcGVydHlNYXRjaGVyR2VuZXJhdG9yc3EAfgALd1eQwXQAIXNob3J0aGFuZFRlc3RSZWdpc3RyYXRpb25GdW5jdGlvbnVxAH4ACQAAAOxzcQB+AAtZJqeSdAALaW5PcmRlck9ubHlzcQB+AAtZmEeCdAAGYXNzZXJ0c3EAfgALkIMQ+HQAHlJlc3VsdE9mU3RhcnRXaXRoV29yZEZvclN0cmluZ3NxAH4ACx1QZ+d0AAdzdWNjZWVkc3EAfgAL78I3qXQAElBsdXNPck1pbnVzV3JhcHBlcnNxAH4ACxf6Y1V0AAZub3RpZnlzcQB+AAtdd8QUdAAmbG93UHJpb3JpdHlDb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAsb0OwPdAAJc2hvdWxkTm90c3EAfgALLi+ds3QABXJlZ2V4c3EAfgALGCQ2wnQABkFuV29yZHNxAH4AC06hYWZ0AAV3b3JkMnNxAH4ACxKVzE50ABBBc3NlcnRpb25zSGVscGVyc3EAfgALaz1rXXQABmNhbmNlbHNxAH4ACw7dMF90ABFleGVjdXRlJGRlZmF1bHQkMnNxAH4AC5ybDk90AAlpbnRlcmNlcHRzcQB+AAs70MlzdAAEZmFpbHNxAH4AC5op+8t0ABRJdFZlcmJTdHJpbmdUYWdnZWRBc3NxAH4AC3nrgOd0AARuYW1lc3EAfgALBuY3jnQAAmluc3EAfgAL1ebs5XQAHEhhdmVQcm9wZXJ0eU1hdGNoZXJHZW5lcmF0b3JzcQB+AAsam2RrdAAFQVdvcmRzcQB+AAssmcXGdAAEaGF2ZXNxAH4ACyxJk190ABRhc3NlcnREb2VzTm90Q29tcGlsZXNxAH4AC/Tdmct0ABFleGVjdXRlJGRlZmF1bHQkNHNxAH4ACwSmA1N0ACJSZXN1bHRPZkNvbnRhaW5Xb3JkRm9yQ29sbGVjdGVkQW55c3EAfgALqBDdtnQAAmlzc3EAfgALeDXHhXQAB2V4ZWN1dGVzcQB+AAtgDNfMdAAEd2FpdHNxAH4ACzsZX/J0AA5EZXRlcm1pbmVkV29yZHNxAH4ACxe9Qsh0AAt0ZXN0RGF0YUZvcnNxAH4AC4PUAlF0ABNjcmVhdGVDYXRjaFJlcG9ydGVyc3EAfgAL6RMj/XQAAjw9c3EAfgALXs2qLnQACXN0eWxlTmFtZXNxAH4AC7nWw4Z0AA1sZWZ0U2lkZVZhbHVlc3EAfgALlfdb23QAE2F0TGVhc3RPbmVFbGVtZW50T2ZzcQB+AAtE0G/adAANJGFzSW5zdGFuY2VPZnNxAH4AC8dGt650AAVlbXB0eXNxAH4AC3OD7cl0AAlzdGFydFdpdGhzcQB+AAu5usS7dAAEc2l6ZXNxAH4AC/dDdjR0ABFleGVjdXRlJGRlZmF1bHQkM3NxAH4AC4bXs+l0ABRSZXN1bHRPZkNvbGxlY3RlZEFueXNxAH4AC1/V++V0AA1hbGxFbGVtZW50c09mc3EAfgALUJoBM3QABWV4aXN0c3EAfgALn4cwb3QACWNvbmZpZ01hcHNxAH4ACwAe5P90AAlWYWx1ZVdvcmRzcQB+AAtnCjT/dAAGZXF1YWxzc3EAfgAL+aiZenQADGF0TGVhc3RPbmVPZnNxAH4AC+TpTyV0AAdhdExlYXN0c3EAfgALeYTMYHQACHRocm93bkJ5c3EAfgALfOZrenQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnZlcnNpb25Db25zdHJhaW50c3EAfgALmhMLVHQAD2RlZmF1bHRFcXVhbGl0eXNxAH4AC9Ud6FV0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0FUb0JDb25zdHJhaW50c3EAfgAL7nGkJHQAHFJlc3VsdE9mRW5kV2l0aFdvcmRGb3JTdHJpbmdzcQB+AAvVZcSpdAAEbXVzdHNxAH4AC4Q9NFt0AANhbGxzcQB+AAuNX/YBdAAEdGFnc3NxAH4AC4m/L1V0AAxhc0luc3RhbmNlT2ZzcQB+AAs2Gw60dAABPHNxAH4AC0+yIN90AAVhbGVydHNxAH4ACzUt3xx0AAdpbk9yZGVyc3EAfgALm2gKeHQACnByZXR0aWZpZXJzcQB+AAvOeXQ1dAADcnVuc3EAfgAL/85VTnQAEURlY2lkZWRCeUVxdWFsaXR5c3EAfgALL9dH1nQABWV2ZXJ5c3EAfgALkfdhc3QABnNjb3Blc3NxAH4AC1uFyLF0AANwb3NzcQB+AAtyRSpJdAAKd2l0aEdyb3Vwc3NxAH4AC2/r52F0AAxzeW5jaHJvbml6ZWRzcQB+AAuuF3V9dAACaXRzcQB+AAsTe0YAdAAHS2V5V29yZHNxAH4AC5EoAod0ABF0aGVTYW1lRWxlbWVudHNBc3NxAH4ACwTgum10AA5hc3NlcnRDb21waWxlc3NxAH4AC3jt5Kd0ABRjaGVja1JlZ2V4JGRlZmF1bHQkMnNxAH4ACy2se4t0AApkZXRlcm1pbmVkc3EAfgAL99bN9HQAAWFzcQB+AAtBIPAGdAAMYXNzZXJ0VGhyb3dzc3EAfgALNwl2cHQADmxlZnRTaWRlU3RyaW5nc3EAfgALmxyrw3QADSRpc0luc3RhbmNlT2ZzcQB+AAt0/okEdAAEdHJhcHNxAH4AC+OVa4N0ABV0ZXN0RGF0YUZvciRkZWZhdWx0JDJzcQB+AAtdL/TKdAASSW5BbmRJZ25vcmVNZXRob2Rzc3EAfgALPdQssnQADGFzc2VydFJlc3VsdHNxAH4AC83wBX50AB5SZXN1bHRPZk5vdFdvcmRGb3JDb2xsZWN0ZWRBbnlzcQB+AAsQcm5AdAACPj1zcQB+AAs20D40dAAMb25lRWxlbWVudE9mc3EAfgALv0CGI3QAF1N0cmluZ0NhbldyYXBwZXJGb3JWZXJic3EAfgALlKhC2XQABHRleHRzcQB+AAt1EJ6idAAlUmVzdWx0T2ZJbmNsdWRlV29yZEZvckNvbGxlY3RlZFN0cmluZ3NxAH4AC+G2TLV0ACxjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb252ZXJzaW9uQ29uc3RyYWludHNxAH4AC2GCrKl0AAdjb250YWluc3EAfgALAq0n8HQABHRoZXlzcQB+AAuYl38odAAHY29tcGlsZXNxAH4AC0bj4wl0ABFleGVjdXRlJGRlZmF1bHQkN3NxAH4ACxgnaCh0AAdleGFjdGx5c3EAfgALTJN6S3QAEXRoZVNhbWVJbnN0YW5jZUFzc3EAfgALiaLD63QAJ1Jlc3VsdE9mU3RhcnRXaXRoV29yZEZvckNvbGxlY3RlZFN0cmluZ3NxAH4AC6odnnB0ABFpbk9yZGVyRWxlbWVudHNPZnNxAH4ACwhMW6F0AAtEZWNpZGVkV29yZHNxAH4AC8FAkiZ0ABV0eXBlQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAtYuYuidAADIT09c3EAfgALQpYv4nQABmF0TW9zdHNxAH4AC88BxrR0AARpbmZvc3EAfgALNnlcinQAC25vRXhjZXB0aW9uc3EAfgALx/rVw3QACW5vdGlmeUFsbHNxAH4ACx7BCGN0AAxJdFZlcmJTdHJpbmdzcQB+AAuhH2iRdAALd2l0aEZpeHR1cmVzcQB+AAuKKwP9dAAHcnVuVGVzdHNxAH4AC9MeUzt0AB1SZXN1bHRPZkJlV29yZEZvckNvbGxlY3RlZEFueXNxAH4AC+yTK5h0AANrZXlzcQB+AAsO8dYOdAAMaXNJbnN0YW5jZU9mc3EAfgALOcmBfHQACHdpdGhDbHVlc3EAfgALGPqSQnQAEGFzc2VydGlvbnNIZWxwZXJzcQB+AAvgN53idAARZXhlY3V0ZSRkZWZhdWx0JDZzcQB+AAsm5ysadAANRnVubnlXb3JkU3BlY3NxAH4AC6vteHt0AAh0YWdnZWRBc3NxAH4AC/+EwCp0AA9hc3NlcnRUeXBlRXJyb3JzcQB+AAt41xO9dAAlUmVzdWx0T2ZFbmRXaXRoV29yZEZvckNvbGxlY3RlZFN0cmluZ3NxAH4AC4z0No90AAZtYXJrdXBzcQB+AAuucLbEdAAIbGVmdFNpZGVzcQB+AAuSL27bdAAGPGluaXQ+c3EAfgALCSwYMnQAC21hY3JvQXNzdW1lc3EAfgALrOOqd3QAD3J1bk5lc3RlZFN1aXRlc3NxAH4ACyKyvEF0ABlSZXN1bHRPZkhhdmVXb3JkRm9yRXh0ZW50c3EAfgALfj+PHXQAA2NhbnNxAH4ACx3klkt0AAViZWluZ3NxAH4ACxeVoqB0AAVlcXVhbHNxAH4AC/OUXIl0AAZJdFdvcmRzcQB+AAtHiXhidAAIYXJlRXF1YWxzcQB+AAs6c5t0dAAGbm9uZU9mc3EAfgALTh3ZwHQABWFwcGx5c3EAfgALE6PioHQACXdpdGhHcm91cHNxAH4AC8hAigx0AAVhZnRlcnNxAH4ACyTc5fp0AAlFcXVhbGl6ZXJzcQB+AAtzI5NsdAAKYWZ0ZXJCZWluZ3NxAH4ACwidgFZ0ABtuZXdBc3NlcnRpb25GYWlsZWRFeGNlcHRpb25zcQB+AAts0G78dAAEbm90ZXNxAH4ACzOte7l0AAI9PXNxAH4ACyXYT0J0AB9JbkFuZElnbm9yZU1ldGhvZHNBZnRlclRhZ2dlZEFzc3EAfgALCCAOSnQAAmJ5c3EAfgALLjvd5HQABnNvcnRlZHNxAH4ACys+Aat0AApmdWxseU1hdGNoc3EAfgAL7+e/XHQABWNsb25lc3EAfgALvhIiF3QADEJlaGF2aW9yV29yZHNxAH4AC4tbNt10ABNTdHJpbmdTaG91bGRXcmFwcGVyc3EAfgALbVHSPHQABnNob3VsZHNxAH4ACz4y1pt0ABBBbnlTaG91bGRXcmFwcGVyc3EAfgALKJFoNnQAF0RldGVybWluZWRCeUVxdWl2YWxlbmNlc3EAfgALqiQJ0HQAA25vdHNxAH4AC3Ql73R0AB9SZXN1bHRPZkJlV29yZEZvckNvbGxlY3RlZEFycmF5c3EAfgALcfoCo3QACWRlZmluZWRBdHNxAH4ACyabS+d0AAxuZXN0ZWRTdWl0ZXNzcQB+AAvAsthNdAAGYXNzdW1lc3EAfgALy7KKFnQABiRpbml0JHNxAH4ACx5GzYx0AAdkZWZpbmVkc3EAfgALCzGpb3QAIGxvd1ByaW9yaXR5VHlwZUNoZWNrZWRDb25zdHJhaW50c3EAfgALcU1cfnQAB2luY2x1ZGVzcQB+AAu5Ir6adAAIVGhleVdvcmRzcQB+AAvALuCgdAAMcmVnaXN0ZXJUZXN0c3EAfgALPpcm6HQACXR5cGVDaGVja3NxAH4AC6GDwlB0ABFleGVjdXRlJGRlZmF1bHQkNXNxAH4AC4JIuOp0AAV3b3JkMXNxAH4AC4NjKFV0AAM9PT1zcQB+AAuvOuuTdAAYbmV3VGVzdENhbmNlbGVkRXhjZXB0aW9uc3EAfgAL7By1H3QAB21lc3NhZ2VzcQB+AAsTv9oFdAAIdG9TdHJpbmdzcQB+AAto/ZCLdAAJdGVzdE5hbWVzc3EAfgALrNdga3QAD3llT2xkZVRlc3ROYW1lc3NxAH4ACzke6ap0AAJhbnNxAH4AC8Gzq1t0AAZsZW5ndGhzcQB+AAtNocAYdAAYU3RyaW5nTXVzdFdyYXBwZXJGb3JWZXJic3EAfgAL9k3ePXQAEWV4ZWN1dGUkZGVmYXVsdCQxc3EAfgAL12VbAHQAAmJlc3EAfgALAtToznQAAiE9c3EAfgALifJl1nQAIlJlc3VsdE9mSGF2ZVdvcmRGb3JDb2xsZWN0ZWRFeHRlbnRzcQB+AAuAwOhVdAAfUmVzdWx0T2ZGdWxseU1hdGNoV29yZEZvclN0cmluZ3NxAH4ACz/EsPp0AApjaGVja1JlZ2V4c3EAfgALJzP/SHQADG1hdGNoUGF0dGVybnNxAH4AC7Wk6wR0ABhJZ25vcmVWZXJiU3RyaW5nVGFnZ2VkQXNzcQB+AAsfg9WfdAAIZ2V0Q2xhc3NzcQB+AAvFq3zJdAATcmVnaXN0ZXJJZ25vcmVkVGVzdHNxAH4AC/nZJOp0AAZiZWhhdmVzcQB+AAukf0T/dAAIcnVuVGVzdHNzcQB+AAtnMvz9dAAIYmVoYXZpb3JzcQB+AAtyVw6ZdAARcGVuZGluZ1VudGlsRml4ZWRzcQB+AAtDg+o1dAASYXRNb3N0T25lRWxlbWVudE9mc3EAfgAL6WnJoXQAGHRoZVNhbWVFbGVtZW50c0luT3JkZXJBc3NxAH4AC0N23sV0ABdUaGVTYW1lSW5zdGFuY2VBc1BocmFzZXNxAH4AC1juTqV0AA5UaGV5VmVyYlN0cmluZ3NxAH4AC/sazEZ0AA1hcmVFcXVpdmFsZW50c3EAfgAL8bxwhHQAB2JldHdlZW5zcQB+AAvYYXVgdAAHZGVjaWRlZHNxAH4AC4JNiR10ABRSZXN1bHRPZkJlV29yZEZvckFueXNxAH4AC6bBUr50ABFleHBlY3RlZFRlc3RDb3VudHNxAH4AC0d3OUh0AAdlbmRXaXRoc3EAfgAL8+wUznQADG5vRWxlbWVudHNPZnNxAH4ACy2jKOl0AAhyZXJ1bm5lcnNxAH4AC1pMWNl0AAtzaG91bGRFcXVhbHNxAH4ACx0x2th0AAlSZWdleFdvcmRzcQB+AAvXBKIvdAAMVGhlQWZ0ZXJXb3Jkc3EAfgAL957KgnQAImNvbnZlcnRFcXVpdmFsZW5jZVRvQlRvQUNvbnN0cmFpbnRzcQB+AAs6Ayz9dAAFb25lT2ZzcQB+AAt1WIXDdAACbmVzcQB+AAtCYgrhdAAWVGhleVZlcmJTdHJpbmdUYWdnZWRBc3NxAH4AC3N3fG10AAJub3NxAH4ACy0WyjR0AChSZXN1bHRPZkZ1bGx5TWF0Y2hXb3JkRm9yQ29sbGVjdGVkU3RyaW5nc3EAfgALZqlgOHQAC2RvQ29sbGVjdGVkc3EAfgALQ7vsmnQAEUNoZWNraW5nRXF1YWxpemVyc3EAfgALMy7Rl3QACHdyaXRhYmxlc3EAfgALQetHEnQAB3BlbmRpbmdzcQB+AAvdQMINdAAFdmFsdWVzcQB+AAvavXKRdAAGaWdub3Jlc3EAfgAL511EiHQACHNob3VsZEJlc3EAfgALPtgSNHQAHFJlc3VsdE9mSW5jbHVkZVdvcmRGb3JTdHJpbmdzcQB+AAu2cqbSdAAQSWdub3JlVmVyYlN0cmluZ3NxAH4AC8RPqHp0AAttYWNyb0Fzc2VydHNxAH4AC7NT4Tx0AAJlcXNxAH4AC3RFZWN0ABpjb252ZXJ0VG9DaGVja2luZ0VxdWFsaXplcnNxAH4ACynTXuF0AAJvZnNxAH4AC5CGAGl0AAIrLXNxAH4ACzMjetd0AAlOb0FyZ1Rlc3RzcQB+AAuXWgfAdAAKSWdub3JlV29yZHNxAH4AC45hruB0AAE+c3EAfgALg0fqHnQACHJlYWRhYmxlc3EAfgALVKZEcXQAAiMjc3EAfgALw/Pc9nQAGlN0cmluZ1Nob3VsZFdyYXBwZXJGb3JWZXJic3EAfgALiInLWnQACGZpbmFsaXplc3EAfgALBRvpmnQAG2NvbnZlcnNpb25DaGVja2VkQ29uc3RyYWludHNxAH4AC+U1E8x0AAthdE1vc3RPbmVPZnNxAH4AC5cARoJ0AAVhbGxPZnNxAH4AC6EGcIh0AAhoYXNoQ29kZXNxAH4AC3w560Z0AAdzdWl0ZUlkc3EAfgALp6WwNHQACXN1aXRlTmFtZXNxAH4AC0XkFV10AAxSZWdleFdyYXBwZXJzcQB+AAvut8f7dAADdGhlc3EAfgALCBvn3HQABmFwcGVuZHNxAH4AC16neD10AARvbmx5c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4CC3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AAx4cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAFXN0cmluZ3MuRnVubnlXb3JkU3BlY3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAnQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHQAEHNjYWxhLmRlcHJlY2F0ZWRzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+AiZ4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AiUAcHNxAH4CKnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgILTAAJaW5oZXJpdGVkcQB+AgtMAAdwYXJlbnRzcQB+Agt4cQB+Ai5zcQB+AiUAcHNxAH4CKnVxAH4CBgAAAABzcQB+AiUAcHNxAH4CKnVxAH4CBgAAAABzcQB+AiUAcHNxAH4CKnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAXc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgAMTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4CLXQACE1hdGNoZXJzc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgItc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AANvcmdzcQB+Akp0AAlzY2FsYXRlc3RzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4CS3NxAH4CPnQACkV4cGxpY2l0bHlzcQB+AkJzcQB+AkV1cQB+AkgAAAADc3EAfgJKdAADb3Jnc3EAfgJKdAAJc2NhbGFjdGljcQB+AlFzcQB+Aj50AAxNYXRjaGVyV29yZHNzcQB+AkJzcQB+AkV1cQB+AkgAAAAEc3EAfgJKdAADb3Jnc3EAfgJKdAAJc2NhbGF0ZXN0c3EAfgJKdAAFd29yZHNxAH4CUXNxAH4CPnQACVRvbGVyYW5jZXEAfgJUc3EAfgI+dAAIRmxhdFNwZWNxAH4CRHNxAH4CPnQADEZsYXRTcGVjTGlrZXEAfgJEc3EAfgI+dAALRG9jdW1lbnRpbmdxAH4CRHNxAH4CPnQACEFsZXJ0aW5ncQB+AkRzcQB+Aj50AAlOb3RpZnlpbmdxAH4CRHNxAH4CPnQACUluZm9ybWluZ3EAfgJEc3EAfgI+dAAHQ2FuVmVyYnEAfgJdc3EAfgI+dAAITXVzdFZlcmJxAH4CXXNxAH4CPnQAClNob3VsZFZlcmJxAH4CXXNxAH4CPnQAEFRlc3RSZWdpc3RyYXRpb25xAH4CRHNxAH4CPnQACVRlc3RTdWl0ZXEAfgJEc3EAfgI+dAAFU3VpdGVxAH4CRHNxAH4CPnQADFNlcmlhbGl6YWJsZXNxAH4CQnNxAH4CRXVxAH4CSAAAAAJzcQB+Akp0AAVzY2FsYXEAfgJRc3EAfgI+cQB+AoFzcQB+AkJzcQB+AkV1cQB+AkgAAAADc3EAfgJKdAAEamF2YXNxAH4CSnQAAmlvcQB+AlFzcQB+Aj50AApBc3NlcnRpb25zcQB+AkRzcQB+Aj50AAxUcmlwbGVFcXVhbHNxAH4CVHNxAH4CPnQAE1RyaXBsZUVxdWFsc1N1cHBvcnRxAH4CVHNxAH4CPnQABk9iamVjdHNxAH4CQnNxAH4CRXVxAH4CSAAAAANzcQB+AkpxAH4CjHNxAH4CSnQABGxhbmdxAH4CUXNxAH4CPnQAA0FueXEAfgKCdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADHhwdAAHc3RyaW5nc3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG7mph1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AAxMAA9zb3VyY2VEaXJlY3RvcnlxAH4ADHhwdAA+L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABROffwh2iIyo4xRh3IL4/YtaVUr1Q==
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> 

/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> 

external apis:
20 items
codility.BinaryGapSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHA6Lvc2AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cBIiv1N0AAZub3RpZnlzcQB+AAzAmJQ7dAAEd2FpdHNxAH4ADHFRNjF0AA0kYXNJbnN0YW5jZU9mc3EAfgAMM/f+rnQABmVxdWFsc3NxAH4ADCCiwV10AAxhc0luc3RhbmNlT2ZzcQB+AAzFaOfbdAAMc3luY2hyb25pemVkc3EAfgAMyMFsUHQAE2dldE1heGltdW1CaW5hcnlHYXBzcQB+AAyDO2ECdAANJGlzSW5zdGFuY2VPZnNxAH4ADI20h5h0AAlub3RpZnlBbGxzcQB+AAx8RrBydAAMaXNJbnN0YW5jZU9mc3EAfgAM7RA8BHQAAj09c3EAfgAMb7+RlXQABWNsb25lc3EAfgAMs3zdLHQAEUJpbmFyeUdhcFNvbHV0aW9uc3EAfgAMUTK9l3QACHRvU3RyaW5nc3EAfgAM2IJl5XQAAiE9c3EAfgAM0LpHuXQACGdldENsYXNzc3EAfgAM80KpHXQAAm5lc3EAfgAMum7NWnQAAmVxc3EAfgAMmUuIEHQAAiMjc3EAfgAMCmb4kHQACGZpbmFsaXplc3EAfgAMUr70RHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAGmNvZGlsaXR5LkJpbmFyeUdhcFNvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AWnhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWQFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQUwACWluaGVyaXRlZHEAfgBBTAAHcGFyZW50c3EAfgBBeHEAfgBic3EAfgBZAXVxAH4APAAAAABwc3EAfgBZAXVxAH4APAAAAABwc3EAfgBZAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AYXQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AenQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ae3NxAH4AbnQAA0FueXNxAH4AcnNxAH4AdXVxAH4AeAAAAAJzcQB+AHp0AAVzY2FsYXEAfgCBcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAhjb2RpbGl0eXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUoUAsKd1ItZ3zrEgBcrDERFaUhos=
search.ConnectedCellSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDDSeGBAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAALXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cA4YhsZ0AAZub3RpZnlzcQB+AAxnAnnTdAAHdW5hcHBseXNxAH4ADP/Pgx50AAdjdXJyaWVkc3EAfgAMxbWRz3QAAXhzcQB+AAxlz9WXdAAMYXJlQ29ubmVjdGVkc3EAfgAMVBWm33QAC2lzQ29ubmVjdGVkc3EAfgAMQyUGinQABHdhaXRzcQB+AAzxI8xodAAOY29weSRkZWZhdWx0JDJzcQB+AAw6RWradAANJGFzSW5zdGFuY2VPZnNxAH4ADLPHyhR0AAVzb2x2ZXNxAH4ADJfihd50AAxwcm9kdWN0QXJpdHlzcQB+AAzsXIszdAAGZXF1YWxzc3EAfgAMLmdoV3QAAXlzcQB+AAx66qfidAAIUG9zaXRpb25zcQB+AAxuK6iWdAAMYXNJbnN0YW5jZU9mc3EAfgAMz8dBe3QADHN5bmNocm9uaXplZHNxAH4ADIKADiF0AA0kaXNJbnN0YW5jZU9mc3EAfgAMIAuv9HQABnR1cGxlZHNxAH4ADI9XKHZ0AAhjYW5FcXVhbHNxAH4ADAUI3ad0AARtYWluc3EAfgAMKNoEBnQADXByb2R1Y3RQcmVmaXhzcQB+AAzQAU/sdAAJbm90aWZ5QWxsc3EAfgAMomFL0HQAC3JlYWRSZXNvbHZlc3EAfgAMsZJREnQACGlzSW5BcmVhc3EAfgAMP3d7e3QACmNhbkNvbm5lY3RzcQB+AAz8nUNEdAAMaXNJbnN0YW5jZU9mc3EAfgAM6iAy5HQABjxpbml0PnNxAH4ADDn0xw90ABVDb25uZWN0ZWRDZWxsU29sdXRpb25zcQB+AAy1pXWldAAFYXBwbHlzcQB+AAx/S0dWdAACPT1zcQB+AAwRIvIFdAAFY2xvbmVzcQB+AAwlohX6dAAOY29weSRkZWZhdWx0JDNzcQB+AAzNeX5ZdAAEY29weXNxAH4ADIS93qZ0AAh0b1N0cmluZ3NxAH4ADHQMevZ0AAIhPXNxAH4ADLJgkXV0AAhnZXRDbGFzc3NxAH4ADGenGXh0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADGUJ2C50AAJuZXNxAH4ADD7u0VJ0AAV2YWx1ZXNxAH4ADK+J4hV0AAJlcXNxAH4ADKO+dg10AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAyfBtA1dAACIyNzcQB+AAwObBdCdAAIZmluYWxpemVzcQB+AAynccuhdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAx0I3CqdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBxeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAcc2VhcmNoLkNvbm5lY3RlZENlbGxTb2x1dGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+AIp4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIkBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AHFMAAlpbmhlcml0ZWRxAH4AcUwAB3BhcmVudHNxAH4AcXhxAH4AknNxAH4AiQF1cQB+AGwAAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+AHJxAH4Ae3VxAH4AfAAAAABzcQB+AH4AcQB+ADV1cQB+AIEAAAAAc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AkXQABFVuaXRzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AJFzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AK11cgAaW0x4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdDv10zod8rNw7gIAAHhwAAAAAXNyABd4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdNbFvBxkSXTjAgACWgAKaXNJbXBsaWNpdFsACnBhcmFtZXRlcnN0ABxbTHhzYnRpL2FwaS9NZXRob2RQYXJhbWV0ZXI7eHAAdXIAHFtMeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlcjvPuMVdpd21bQIAAHhwAAAAAXNyABl4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyH0WuF9NJsOoCAARaAApoYXNEZWZhdWx0TAAIbW9kaWZpZXJ0AB1MeHNidGkvYXBpL1BhcmFtZXRlck1vZGlmaWVyO0wABG5hbWVxAH4ADUwAA3RwZXEAfgCaeHAAfnIAG3hzYnRpLmFwaS5QYXJhbWV0ZXJNb2RpZmllcgAAAAAAAAAAEgAAeHEAfgCEdAAFUGxhaW50AARhcmdzc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgChWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgCRc3EAfgCgdAAFQXJyYXlxAH4ApnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3EAfgCgdAAGU3RyaW5nc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHQABGphdmFzcQB+AKx0AARsYW5ncQB+ALFwc3EAfgCJAXVxAH4AbAAAAABwc3EAfgCJAXVxAH4AxQAAAAJzcQB+AKB0AAZPYmplY3RxAH4AyXNxAH4AoHQAA0FueXEAfgCmcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAZzZWFyY2hzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFKfiC378a49ZaHKEtDu148z8NLNk
search.MissingNumberSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCQmKIoAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAGHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cNxnRRV0AAZub3RpZnlzcQB+AAwXfgfrdAAEd2FpdHNxAH4ADAylxlh0AA0kYXNJbnN0YW5jZU9mc3EAfgAMsNkj1XQABXNvbHZlc3EAfgAM8px7p3QABmVxdWFsc3NxAH4ADGyMBUp0AAxhc0luc3RhbmNlT2ZzcQB+AAxZ7tE7dAAVTWlzc2luZ051bWJlclNvbHV0aW9uc3EAfgAMOlkcIXQADHN5bmNocm9uaXplZHNxAH4ADFbi6RJ0AA0kaXNJbnN0YW5jZU9mc3EAfgAM9/Q3wHQABG1haW5zcQB+AAz62DD5dAAJbm90aWZ5QWxsc3EAfgAM7T1bIXQADGlzSW5zdGFuY2VPZnNxAH4ADMXjBkl0AAhnZXRBcnJheXNxAH4ADCb5WG50AAI9PXNxAH4ADFZzO+10AAVjbG9uZXNxAH4ADAuntft0AAh0b1N0cmluZ3NxAH4ADBJHwRB0AAIhPXNxAH4ADEL52Ut0AAhnZXRDbGFzc3NxAH4ADAzaS+J0AAhnZXRDb3VudHNxAH4ADDhkMYh0AAJuZXNxAH4ADPVYImZ0AAJlcXNxAH4ADBXFq8F0AAIjI3NxAH4ADCG3hTR0AAhmaW5hbGl6ZXNxAH4ADI+tG/F0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEd4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0ABxzZWFyY2guTWlzc2luZ051bWJlclNvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AYHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AR0wACWluaGVyaXRlZHEAfgBHTAAHcGFyZW50c3EAfgBHeHEAfgBoc3EAfgBfAXVxAH4AQgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ASHEAfgBRdXEAfgBSAAAAAHNxAH4AVABxAH4AIXVxAH4AVwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBndAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AZ3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ag3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AHB4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFp0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHdbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGdzcQB+AHZ0AAVBcnJheXEAfgB8dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHZ0AAZTdHJpbmdzcQB+AHpzcQB+AH11cQB+AIAAAAADc3EAfgCCdAAEamF2YXNxAH4AgnQABGxhbmdxAH4Ah3BzcQB+AF8BdXEAfgBCAAAAAHBzcQB+AF8BdXEAfgCbAAAAAnNxAH4AdnQABk9iamVjdHEAfgCfc3EAfgB2dAADQW55cQB+AHxwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQABnNlYXJjaHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAURu5v5deTBR9pI7BFeHEZDMYQkQc=
search.SherlockArraySolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCJ5JaVAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCx2YO50AAZub3RpZnlzcQB+AAxCz46HdAAEd2FpdHNxAH4ADHdS6uR0ABVTaGVybG9ja0FycmF5U29sdXRpb25zcQB+AAyALFZPdAANJGFzSW5zdGFuY2VPZnNxAH4ADGOq+FB0AAVzb2x2ZXNxAH4ADOgqt5J0AAZlcXVhbHNzcQB+AAwaXBJOdAAMYXNJbnN0YW5jZU9mc3EAfgAMpwQClnQADHN5bmNocm9uaXplZHNxAH4ADG4uRBZ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMo6dB4HQABG1haW5zcQB+AAzCjEk+dAAJbm90aWZ5QWxsc3EAfgAM+J89V3QADGlzSW5zdGFuY2VPZnNxAH4ADM1RT790AAI9PXNxAH4ADMAAu8d0AAVjbG9uZXNxAH4ADM4qdgB0AAh0b1N0cmluZ3NxAH4ADDKogKp0AAIhPXNxAH4ADAVx5vZ0AAhnZXRDbGFzc3NxAH4ADF5fnzN0AAJuZXNxAH4ADCYzD0Z0AAJlcXNxAH4ADCn5dCN0AAIjI3NxAH4ADCucWRp0AAhmaW5hbGl6ZXNxAH4ADBDEfyJ0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEN4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0ABxzZWFyY2guU2hlcmxvY2tBcnJheVNvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBkc3EAfgBbAXVxAH4APgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ARHEAfgBNdXEAfgBOAAAAAHNxAH4AUABxAH4AIXVxAH4AUwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AY3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Af3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AGx4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFZ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHNbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGNzcQB+AHJ0AAVBcnJheXEAfgB4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHJ0AAZTdHJpbmdzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3BzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgCXAAAAAnNxAH4AcnQABk9iamVjdHEAfgCbc3EAfgBydAADQW55cQB+AHhwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQABnNlYXJjaHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUik07U4TT2jiWUhJOwSq7QUHgCqQ=
sorting.InsertionSort1$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHD9AhZFAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCFUwQx0AAZub3RpZnlzcQB+AAxzCS0YdAAEd2FpdHNxAH4ADGxNsFh0AA0kYXNJbnN0YW5jZU9mc3EAfgAM6Vg/Q3QADkluc2VydGlvblNvcnQxc3EAfgAMWqJdoHQABXNvbHZlc3EAfgAMfQUsE3QABmVxdWFsc3NxAH4ADCqo7Ht0AAxhc0luc3RhbmNlT2ZzcQB+AAxkcJFEdAAIZ2V0SW5wdXRzcQB+AAz7h14QdAAMc3luY2hyb25pemVkc3EAfgAM4ekb1nQADSRpc0luc3RhbmNlT2ZzcQB+AAx/Z0wHdAAEbWFpbnNxAH4ADApjCdF0AAlub3RpZnlBbGxzcQB+AAwyIPpfdAAMaXNJbnN0YW5jZU9mc3EAfgAM3f9ArHQAAj09c3EAfgAM+lD1ZXQABWNsb25lc3EAfgAMLKsnV3QACHRvU3RyaW5nc3EAfgAM1MsA7XQAAiE9c3EAfgAMbblpdXQACGdldENsYXNzc3EAfgAMe94ubnQAAm5lc3EAfgAMS6fp+nQAAmVxc3EAfgAMcTxdLHQAAiMjc3EAfgAMY1Vc1nQACGZpbmFsaXplc3EAfgAMSnyGAHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAFnNvcnRpbmcuSW5zZXJ0aW9uU29ydDF1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBeeHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBdAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBFTAAJaW5oZXJpdGVkcQB+AEVMAAdwYXJlbnRzcQB+AEV4cQB+AGZzcQB+AF0BdXEAfgBAAAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBGcQB+AE91cQB+AFAAAAAAc3EAfgBSAHEAfgAjdXEAfgBVAAAAAHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGV0AARVbml0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBlc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCBdXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AbnhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AWHQABVBsYWludAAEYXJnc3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4AdVsADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AZXNxAH4AdHQABUFycmF5cQB+AHp1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AdHQABlN0cmluZ3NxAH4AeHNxAH4Ae3VxAH4AfgAAAANzcQB+AIB0AARqYXZhc3EAfgCAdAAEbGFuZ3EAfgCFcHNxAH4AXQF1cQB+AEAAAAAAcHNxAH4AXQF1cQB+AJkAAAACc3EAfgB0dAAGT2JqZWN0cQB+AJ1zcQB+AHR0AANBbnlxAH4AenBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHc29ydGluZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUbENZ87uM5dH4FL+vd57tvxbuTyU=
sorting.InsertionSort2$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCZqLdOAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cMIOxbB0AAZub3RpZnlzcQB+AAyUIvgpdAAEd2FpdHNxAH4ADPEHYLZ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMvHqm33QABXNvbHZlc3EAfgAMr8txN3QABmVxdWFsc3NxAH4ADEsF3TB0AAxhc0luc3RhbmNlT2ZzcQB+AAxqNV3jdAAMc3luY2hyb25pemVkc3EAfgAMJsnvYnQADSRpc0luc3RhbmNlT2ZzcQB+AAwwXDEedAAOSW5zZXJ0aW9uU29ydDJzcQB+AAytQLzDdAAEbWFpbnNxAH4ADEU0NYh0AAlub3RpZnlBbGxzcQB+AAyMKjj2dAAMaXNJbnN0YW5jZU9mc3EAfgAMSTtEy3QAAj09c3EAfgAMweA3jHQABWNsb25lc3EAfgAM6WAKUHQACHRvU3RyaW5nc3EAfgAMRhf9anQAAiE9c3EAfgAMKrT24nQACGdldENsYXNzc3EAfgAMJyTydHQAAm5lc3EAfgAMrGlqmnQAAmVxc3EAfgAMUCMJhXQAAiMjc3EAfgAMTM0X0XQACGZpbmFsaXplc3EAfgAMsW6qxnQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAFnNvcnRpbmcuSW5zZXJ0aW9uU29ydDJ1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBceHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBbAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGRzcQB+AFsBdXEAfgA+AAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBEcQB+AE11cQB+AE4AAAAAc3EAfgBQAHEAfgAhdXEAfgBTAAAAAHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGN0AARVbml0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBjc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB/dXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AbHhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AVnQABVBsYWludAAEYXJnc3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4Ac1sADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AY3NxAH4AcnQABUFycmF5cQB+AHh1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AcnQABlN0cmluZ3NxAH4AdnNxAH4AeXVxAH4AfAAAAANzcQB+AH50AARqYXZhc3EAfgB+dAAEbGFuZ3EAfgCDcHNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cQB+AJcAAAACc3EAfgBydAAGT2JqZWN0cQB+AJtzcQB+AHJ0AANBbnlxAH4AeHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHc29ydGluZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUubECrutch2pDl7knojwlUxgACKE=
sorting.MatrixRotation$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDNnpK0AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAALHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cEResdx0AAZub3RpZnlzcQB+AAwVXP0+dAAHdW5hcHBseXNxAH4ADMOOYYt0AAdjdXJyaWVkc3EAfgAMjwfBNnQAB2dldE5leHRzcQB+AAylG8CkdAAEd2FpdHNxAH4ADF2rqA10AAIrOnNxAH4ADKBySXZ0AA5jb3B5JGRlZmF1bHQkMnNxAH4ADNW6XLF0AA0kYXNJbnN0YW5jZU9mc3EAfgAMxWmDA3QABXNvbHZlc3EAfgAMfrgyY3QADHByb2R1Y3RBcml0eXNxAH4ADBntGBR0AAZlcXVhbHNzcQB+AAwMraUjdAAIUG9zaXRpb25zcQB+AAzU9lpQdAAMYXNJbnN0YW5jZU9mc3EAfgAMQgsNO3QACGdldElucHV0c3EAfgAMo6X4AnQADHN5bmNocm9uaXplZHNxAH4ADM2EMep0AA0kaXNJbnN0YW5jZU9mc3EAfgAMANaPQ3QABnR1cGxlZHNxAH4ADAQA+jF0AAhjYW5FcXVhbHNxAH4ADDaYeWx0AANyb3dzcQB+AAwWoxhrdAAEbWFpbnNxAH4ADCxoJ0l0AA1wcm9kdWN0UHJlZml4c3EAfgAMp2Z58nQACW5vdGlmeUFsbHNxAH4ADNQ+M/l0AAtyZWFkUmVzb2x2ZXNxAH4ADLKlZtV0AAxpc0luc3RhbmNlT2ZzcQB+AAz9XVXcdAALcHJpbnRNYXRyaXhzcQB+AAxC3ApNdAAGPGluaXQ+c3EAfgAMFbcAbHQABWFwcGx5c3EAfgAMHufgKnQADk1hdHJpeFJvdGF0aW9uc3EAfgAMYFhftnQAAj09c3EAfgAMY91K1XQABWNsb25lc3EAfgAMJxxzjHQABGNvcHlzcQB+AAwkIarLdAAGY29sdW1uc3EAfgAMRvETrnQACHRvU3RyaW5nc3EAfgAMsGIUCXQAAiE9c3EAfgAMIFsLwHQAAi06c3EAfgAMkeV4IHQACGdldENsYXNzc3EAfgAM0j+n3HQADmNvcHkkZGVmYXVsdCQxc3EAfgAM+ucSGnQAAm5lc3EAfgAMPUqsVXQAAmVxc3EAfgAM7UraDHQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADDmcCp10AAIjI3NxAH4ADOL/JKx0AAhmaW5hbGl6ZXNxAH4ADPo0uqt0AA5wcm9kdWN0RWxlbWVudHNxAH4ADFZdsU10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AG94cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0ABZzb3J0aW5nLk1hdHJpeFJvdGF0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AiHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AhwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4Ab0wACWluaGVyaXRlZHEAfgBvTAAHcGFyZW50c3EAfgBveHEAfgCQc3EAfgCHAXVxAH4AagAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4AcHEAfgB5dXEAfgB6AAAAAHNxAH4AfABxAH4ANXVxAH4AfwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCPdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Aj3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Aq3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AJh4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AIJ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AJ9bAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AI9zcQB+AJ50AAVBcnJheXEAfgCkdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AJ50AAZTdHJpbmdzcQB+AKJzcQB+AKV1cQB+AKgAAAADc3EAfgCqdAAEamF2YXNxAH4AqnQABGxhbmdxAH4Ar3BzcQB+AIcBdXEAfgBqAAAAAHBzcQB+AIcBdXEAfgDDAAAAAnNxAH4AnnQABk9iamVjdHEAfgDHc3EAfgCedAADQW55cQB+AKRwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3NvcnRpbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFHsIDwLfWjp1oTqlgdkR50oOgc5P
sorting.QuickSort1$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDsXLMgAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHDwp3R0AAZub3RpZnlzcQB+AAxQcVTTdAAEd2FpdHNxAH4ADCmjpEt0AA0kYXNJbnN0YW5jZU9mc3EAfgAM/d/8XnQABXNvbHZlc3EAfgAMiM4zxXQABmVxdWFsc3NxAH4ADAmldWh0AAxhc0luc3RhbmNlT2ZzcQB+AAzbDgoxdAAMc3luY2hyb25pemVkc3EAfgAMJ8peIXQADSRpc0luc3RhbmNlT2ZzcQB+AAyO6VFfdAAEbWFpbnNxAH4ADAul4Sl0AAlub3RpZnlBbGxzcQB+AAyTJaFPdAAMaXNJbnN0YW5jZU9mc3EAfgAMvWxKG3QAAj09c3EAfgAMJTRdCHQABWNsb25lc3EAfgAM7VbXAHQACHRvU3RyaW5nc3EAfgAMsyA4M3QAAiE9c3EAfgAMbwmBNnQACGdldENsYXNzc3EAfgAMguyFGXQAAm5lc3EAfgAMFyJBJXQAClF1aWNrU29ydDFzcQB+AAz90UBWdAACZXFzcQB+AAzaYt2FdAACIyNzcQB+AAxXj8ZTdAAIZmluYWxpemVzcQB+AAw3npHadAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAASc29ydGluZy5RdWlja1NvcnQxdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBkc3EAfgBbAXVxAH4APgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ARHEAfgBNdXEAfgBOAAAAAHNxAH4AUABxAH4AH3VxAH4AUwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AY3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Af3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AGx4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFZ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHNbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGNzcQB+AHJ0AAVBcnJheXEAfgB4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHJ0AAZTdHJpbmdzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3BzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgCXAAAAAnNxAH4AcnQABk9iamVjdHEAfgCbc3EAfgBydAADQW55cQB+AHhwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3NvcnRpbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFI5mXuTz0XEoTGME00OmmMkxYyFl
sorting.QuickSort2$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAjcRMkAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cI3EBkV0AAZub3RpZnlzcQB+AAz9TnL1dAAEd2FpdHNxAH4ADJ7nhzl0AA0kYXNJbnN0YW5jZU9mc3EAfgAMBqFgmXQABXNvbHZlc3EAfgAMaDGgUnQABmVxdWFsc3NxAH4ADPn5Fsd0AApRdWlja1NvcnQyc3EAfgAMFSipcXQADGFzSW5zdGFuY2VPZnNxAH4ADNYVWP50AAxzeW5jaHJvbml6ZWRzcQB+AAx8a1rOdAANJGlzSW5zdGFuY2VPZnNxAH4ADArcNER0AARtYWluc3EAfgAMa4fUyXQACW5vdGlmeUFsbHNxAH4ADIzTKGB0AAxpc0luc3RhbmNlT2ZzcQB+AAygI1HhdAACPT1zcQB+AAyCGn9OdAAFY2xvbmVzcQB+AAzfa0TzdAAIdG9TdHJpbmdzcQB+AAyTElYZdAACIT1zcQB+AAzlW1RWdAAIZ2V0Q2xhc3NzcQB+AAwimhxhdAACbmVzcQB+AAw62WS9dAACZXFzcQB+AAxpI+0jdAACIyNzcQB+AAxcSkWvdAAIZmluYWxpemVzcQB+AAybCa/LdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAASc29ydGluZy5RdWlja1NvcnQydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBkc3EAfgBbAXVxAH4APgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ARHEAfgBNdXEAfgBOAAAAAHNxAH4AUABxAH4AIXVxAH4AUwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AY3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Af3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AGx4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFZ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHNbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGNzcQB+AHJ0AAVBcnJheXEAfgB4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHJ0AAZTdHJpbmdzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3BzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgCXAAAAAnNxAH4AcnQABk9iamVjdHEAfgCbc3EAfgBydAADQW55cQB+AHhwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3NvcnRpbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFANvf1WOXmiGBp+5fhfNRQElLPlH
sorting.QuickSortInPlace$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBrDQneAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cDM04jR0AAZub3RpZnlzcQB+AAwUuoXYdAAEd2FpdHNxAH4ADM2DbBN0AA0kYXNJbnN0YW5jZU9mc3EAfgAMxwOJK3QABXNvbHZlc3EAfgAMiASocXQABmVxdWFsc3NxAH4ADLOL4zB0AAxhc0luc3RhbmNlT2ZzcQB+AAzaKpGndAAMc3luY2hyb25pemVkc3EAfgAM2w9csnQADSRpc0luc3RhbmNlT2ZzcQB+AAyvqmjmdAAEbWFpbnNxAH4ADD3w6Tt0AAlub3RpZnlBbGxzcQB+AAyogUMudAAMaXNJbnN0YW5jZU9mc3EAfgAMRU1t7nQAAj09c3EAfgAMQgCPpHQABWNsb25lc3EAfgAM8As8t3QACHRvU3RyaW5nc3EAfgAMcmAqz3QAAiE9c3EAfgAMNGzI4HQACGdldENsYXNzc3EAfgAMEakrzHQAAm5lc3EAfgAMuOPGBHQAEFF1aWNrU29ydEluUGxhY2VzcQB+AAwD3H7SdAACZXFzcQB+AAwzsrkjdAACIyNzcQB+AAycaeF8dAAIZmluYWxpemVzcQB+AAwW8xIbdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAYc29ydGluZy5RdWlja1NvcnRJblBsYWNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBkc3EAfgBbAXVxAH4APgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ARHEAfgBNdXEAfgBOAAAAAHNxAH4AUABxAH4AH3VxAH4AUwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AY3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Af3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AGx4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFZ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHNbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGNzcQB+AHJ0AAVBcnJheXEAfgB4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHJ0AAZTdHJpbmdzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3BzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgCXAAAAAnNxAH4AcnQABk9iamVjdHEAfgCbc3EAfgBydAADQW55cQB+AHhwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3NvcnRpbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFOgPKnCYVlTdxneTcDSgKiYsmiI0
strings.AlternatingSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCKbND3AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cMYXnm10AAZub3RpZnlzcQB+AAyPRwgRdAAEd2FpdHNxAH4ADFABRQ50AA0kYXNJbnN0YW5jZU9mc3EAfgAMkBcvTXQABmVxdWFsc3NxAH4ADGZCA4p0AA5jb3VudERlbGV0aW9uc3NxAH4ADDWEAyN0AAxhc0luc3RhbmNlT2ZzcQB+AAz4h+jddAAMc3luY2hyb25pemVkc3EAfgAMR95olnQADSRpc0luc3RhbmNlT2ZzcQB+AAwyXY3ddAAEbWFpbnNxAH4ADPNGoGF0AAlub3RpZnlBbGxzcQB+AAxc7FiQdAAMaXNJbnN0YW5jZU9mc3EAfgAMT3fjsXQAAj09c3EAfgAMkJ9eFHQABWNsb25lc3EAfgAMejiS73QACHRvU3RyaW5nc3EAfgAMX6LYl3QAAiE9c3EAfgAMr3grEnQACGdldENsYXNzc3EAfgAMnwIg+3QAAm5lc3EAfgAMUVLbj3QAE0FsdGVybmF0aW5nU29sdXRpb25zcQB+AAxoRYlMdAACZXFzcQB+AAyMsXeUdAACIyNzcQB+AAwV5Tb8dAAIZmluYWxpemVzcQB+AAx7bNMwdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAbc3RyaW5ncy5BbHRlcm5hdGluZ1NvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBkc3EAfgBbAXVxAH4APgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ARHEAfgBNdXEAfgBOAAAAAHNxAH4AUABxAH4AH3VxAH4AUwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AY3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Af3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AGx4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFZ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHNbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGNzcQB+AHJ0AAVBcnJheXEAfgB4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHJ0AAZTdHJpbmdzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3BzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgCXAAAAAnNxAH4AcnQABk9iamVjdHEAfgCbc3EAfgBydAADQW55cQB+AHhwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmluZ3NzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFFlZi3p+kHwqEagZDsJp7UWRB6FL
strings.AnagramPalindromeSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDyC5UJAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cD+oQyF0AAZub3RpZnlzcQB+AAx2ONdddAAEd2FpdHNxAH4ADNYqUoh0AA0kYXNJbnN0YW5jZU9mc3EAfgAMLCUhInQABmVxdWFsc3NxAH4ADN1xKm10AAxhc0luc3RhbmNlT2ZzcQB+AAzr4dO6dAAMc3luY2hyb25pemVkc3EAfgAM8hhaKHQADSRpc0luc3RhbmNlT2ZzcQB+AAxg+Qt2dAAEbWFpbnNxAH4ADI4fIuV0AAlub3RpZnlBbGxzcQB+AAzoMqPbdAAMaXNJbnN0YW5jZU9mc3EAfgAM7MfVYnQAFGhhc0FuYWdyYW1QYWxpbmRyb21lc3EAfgAMM4Cq0XQAAj09c3EAfgAMetP9C3QABWNsb25lc3EAfgAMpkh+b3QACHRvU3RyaW5nc3EAfgAM9H8R73QAAiE9c3EAfgAMgNAs3HQAGUFuYWdyYW1QYWxpbmRyb21lU29sdXRpb25zcQB+AAwdkFxhdAAIZ2V0Q2xhc3NzcQB+AAwSRzX7dAACbmVzcQB+AAykiEOVdAACZXFzcQB+AAwPqm8ydAACIyNzcQB+AAxS76DudAAIZmluYWxpemVzcQB+AAzvVl+ldAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAhc3RyaW5ncy5BbmFncmFtUGFsaW5kcm9tZVNvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBkc3EAfgBbAXVxAH4APgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ARHEAfgBNdXEAfgBOAAAAAHNxAH4AUABxAH4AHXVxAH4AUwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AY3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Af3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AGx4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFZ0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHNbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGNzcQB+AHJ0AAVBcnJheXEAfgB4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHJ0AAZTdHJpbmdzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3BzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgCXAAAAAnNxAH4AcnQABk9iamVjdHEAfgCbc3EAfgBydAADQW55cQB+AHhwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmluZ3NzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG/s8alkzgbkbeoBCIZkUKLSJyAI
strings.AnagramSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDbrQG8AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cGwX3D90AAZub3RpZnlzcQB+AAysQWM2dAAEd2FpdHNxAH4ADGzdzjp0AA0kYXNJbnN0YW5jZU9mc3EAfgAMDaDH9nQABXNvbHZlc3EAfgAMkbAuOXQABmVxdWFsc3NxAH4ADKPddXF0AAxhc0luc3RhbmNlT2ZzcQB+AAwb0wBbdAAMc3luY2hyb25pemVkc3EAfgAMpPVAi3QADSRpc0luc3RhbmNlT2ZzcQB+AAwDg4rLdAAEbWFpbnNxAH4ADIFXzNB0AAlub3RpZnlBbGxzcQB+AAxw1KmHdAAMaXNJbnN0YW5jZU9mc3EAfgAMtVCy+HQAD0FuYWdyYW1Tb2x1dGlvbnNxAH4ADN+kdLJ0AAI9PXNxAH4ADLQGrR50AAVjbG9uZXNxAH4ADLCzVzl0AAh0b1N0cmluZ3NxAH4ADHOB3510AAIhPXNxAH4ADMmpmlZ0AAhnZXRDbGFzc3NxAH4ADKk6+I10AAJuZXNxAH4ADNKSr/B0AAJlcXNxAH4ADNPmc2J0AAIjI3NxAH4ADCpPf+p0AAhmaW5hbGl6ZXNxAH4ADGNADfZ0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEN4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0ABdzdHJpbmdzLkFuYWdyYW1Tb2x1dGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+AFx4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFsBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AZHNxAH4AWwF1cQB+AD4AAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+AERxAH4ATXVxAH4ATgAAAABzcQB+AFAAcQB+AB91cQB+AFMAAAAAc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AY3QABFVuaXRzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGNzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH91cgAaW0x4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdDv10zod8rNw7gIAAHhwAAAAAXNyABd4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdNbFvBxkSXTjAgACWgAKaXNJbXBsaWNpdFsACnBhcmFtZXRlcnN0ABxbTHhzYnRpL2FwaS9NZXRob2RQYXJhbWV0ZXI7eHAAdXIAHFtMeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlcjvPuMVdpd21bQIAAHhwAAAAAXNyABl4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyH0WuF9NJsOoCAARaAApoYXNEZWZhdWx0TAAIbW9kaWZpZXJ0AB1MeHNidGkvYXBpL1BhcmFtZXRlck1vZGlmaWVyO0wABG5hbWVxAH4ADUwAA3RwZXEAfgBseHAAfnIAG3hzYnRpLmFwaS5QYXJhbWV0ZXJNb2RpZmllcgAAAAAAAAAAEgAAeHEAfgBWdAAFUGxhaW50AARhcmdzc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgBzWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgBjc3EAfgBydAAFQXJyYXlxAH4AeHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3EAfgBydAAGU3RyaW5nc3EAfgB2c3EAfgB5dXEAfgB8AAAAA3NxAH4AfnQABGphdmFzcQB+AH50AARsYW5ncQB+AINwc3EAfgBbAXVxAH4APgAAAABwc3EAfgBbAXVxAH4AlwAAAAJzcQB+AHJ0AAZPYmplY3RxAH4Am3NxAH4AcnQAA0FueXEAfgB4cHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAdzdHJpbmdzc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFaYbm8VHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADkvVXNlcnMvYWxleC9kZXYvcHJhY3RpY2UvY29kaW5nL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRsUd0THBn1pnycVXPw0ufmB4kR+w==
strings.FunnyWordSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCeTZraAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHHZ8T10AAZub3RpZnlzcQB+AAyFvzP6dAAEd2FpdHNxAH4ADLaaxyZ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMuWJPdXQABXNvbHZlc3EAfgAMmh9kQXQABmVxdWFsc3NxAH4ADISf2e50AAxhc0luc3RhbmNlT2ZzcQB+AAwhmItQdAAMc3luY2hyb25pemVkc3EAfgAM6CPMJHQADSRpc0luc3RhbmNlT2ZzcQB+AAzV0+l9dAAEbWFpbnNxAH4ADNreSJF0AAlub3RpZnlBbGxzcQB+AAwDV+rtdAAMaXNJbnN0YW5jZU9mc3EAfgAM3Mvt2XQAAj09c3EAfgAM+cmNznQABWNsb25lc3EAfgAM2xViknQAEUZ1bm55V29yZFNvbHV0aW9uc3EAfgAMDhgLD3QACHRvU3RyaW5nc3EAfgAM/VHuhXQAAiE9c3EAfgAMa36mInQACGdldENsYXNzc3EAfgAMTFDFeXQAAm5lc3EAfgAMKOO2ZnQAAmVxc3EAfgAMd8l+qXQAAiMjc3EAfgAMRvELiXQACGZpbmFsaXplc3EAfgAMuPN4MnQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAGXN0cmluZ3MuRnVubnlXb3JkU29sdXRpb251cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBceHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBbAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGRzcQB+AFsBdXEAfgA+AAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBEcQB+AE11cQB+AE4AAAAAc3EAfgBQAHEAfgAfdXEAfgBTAAAAAHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGN0AARVbml0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBjc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB/dXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AbHhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AVnQABVBsYWludAAEYXJnc3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4Ac1sADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AY3NxAH4AcnQABUFycmF5cQB+AHh1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AcnQABlN0cmluZ3NxAH4AdnNxAH4AeXVxAH4AfAAAAANzcQB+AH50AARqYXZhc3EAfgB+dAAEbGFuZ3EAfgCDcHNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cQB+AJcAAAACc3EAfgBydAAGT2JqZWN0cQB+AJtzcQB+AHJ0AANBbnlxAH4AeHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHc3RyaW5nc3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUYWGbtuSFZYjpkzHxkK4VIawr5Kc=
strings.GemeStoneSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAfKHL8AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cFXCHkJ0AAZub3RpZnlzcQB+AAzl1Gz0dAAEd2FpdHNxAH4ADMuTi7J0AA0kYXNJbnN0YW5jZU9mc3EAfgAMD1y0gnQABXNvbHZlc3EAfgAMVqAquXQABmVxdWFsc3NxAH4ADKvfKMd0AAxhc0luc3RhbmNlT2ZzcQB+AAyw53PNdAAMc3luY2hyb25pemVkc3EAfgAM4+CHQXQADSRpc0luc3RhbmNlT2ZzcQB+AAzUp+z0dAAEbWFpbnNxAH4ADA2mHJB0ABFHZW1lU3RvbmVTb2x1dGlvbnNxAH4ADBhpAt90AAlub3RpZnlBbGxzcQB+AAycGbz1dAAMaXNJbnN0YW5jZU9mc3EAfgAM+hHFoHQAAj09c3EAfgAMmU4pJ3QABWNsb25lc3EAfgAMTLX9SHQACHRvU3RyaW5nc3EAfgAM+qU+dXQAAiE9c3EAfgAMnHw7YXQACGdldENsYXNzc3EAfgAMYlfMi3QAAm5lc3EAfgAM3V0xSXQAAmVxc3EAfgAMbvGAd3QAAiMjc3EAfgAM6VDwrHQACGZpbmFsaXplc3EAfgAMRPLD63QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAGXN0cmluZ3MuR2VtZVN0b25lU29sdXRpb251cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBceHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBbAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGRzcQB+AFsBdXEAfgA+AAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBEcQB+AE11cQB+AE4AAAAAc3EAfgBQAHEAfgAfdXEAfgBTAAAAAHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGN0AARVbml0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBjc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB/dXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AbHhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AVnQABVBsYWludAAEYXJnc3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4Ac1sADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AY3NxAH4AcnQABUFycmF5cQB+AHh1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AcnQABlN0cmluZ3NxAH4AdnNxAH4AeXVxAH4AfAAAAANzcQB+AH50AARqYXZhc3EAfgB+dAAEbGFuZ3EAfgCDcHNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cQB+AJcAAAACc3EAfgBydAAGT2JqZWN0cQB+AJtzcQB+AHJ0AANBbnlxAH4AeHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHc3RyaW5nc3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUTK+3jmsecGlKUOZI1Wkw6sZMTHo=
strings.PalindromeLetterSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAm4AM+AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAGHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cLKVgRF0AAZub3RpZnlzcQB+AAzqqiaMdAAEd2FpdHNxAH4ADMAPoHh0AA0kYXNJbnN0YW5jZU9mc3EAfgAMq0azCXQADGlzUGFsaW5kcm9tZXNxAH4ADFF20b50AAZlcXVhbHNzcQB+AAwGEzTgdAAMYXNJbnN0YW5jZU9mc3EAfgAMeArKz3QACGFscGhhYmV0c3EAfgAMgKUTrnQADHN5bmNocm9uaXplZHNxAH4ADHKcOXt0AA0kaXNJbnN0YW5jZU9mc3EAfgAMAM/EsXQABG1haW5zcQB+AAysh5dcdAAJbm90aWZ5QWxsc3EAfgAMQkH9fHQADGlzSW5zdGFuY2VPZnNxAH4ADPDpigF0AAI9PXNxAH4ADHXTtdZ0AAVjbG9uZXNxAH4ADCknc0R0AA9jb3VudE9wZXJhdGlvbnNzcQB+AAysgzkAdAAYUGFsaW5kcm9tZUxldHRlclNvbHV0aW9uc3EAfgAMinDk+XQACHRvU3RyaW5nc3EAfgAMmmFxDnQAAiE9c3EAfgAMvsLu7HQACGdldENsYXNzc3EAfgAMvE6IH3QAAm5lc3EAfgAMmI8S9XQAAmVxc3EAfgAMm0ZPE3QAAiMjc3EAfgAMe8Om/HQACGZpbmFsaXplc3EAfgAM2Wu9kXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AR3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAIHN0cmluZ3MuUGFsaW5kcm9tZUxldHRlclNvbHV0aW9udXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AYHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AR0wACWluaGVyaXRlZHEAfgBHTAAHcGFyZW50c3EAfgBHeHEAfgBoc3EAfgBfAXVxAH4AQgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ASHEAfgBRdXEAfgBSAAAAAHNxAH4AVABxAH4AIXVxAH4AVwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBndAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AZ3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ag3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AHB4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFp0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHdbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGdzcQB+AHZ0AAVBcnJheXEAfgB8dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHZ0AAZTdHJpbmdzcQB+AHpzcQB+AH11cQB+AIAAAAADc3EAfgCCdAAEamF2YXNxAH4AgnQABGxhbmdxAH4Ah3BzcQB+AF8BdXEAfgBCAAAAAHBzcQB+AF8BdXEAfgCbAAAAAnNxAH4AdnQABk9iamVjdHEAfgCfc3EAfgB2dAADQW55cQB+AHxwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmluZ3NzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFEzy3Q9ZqkczWqPlfWoBTXqjlUkL
strings.PangramSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC9UGAoAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJiAoKx0AAZub3RpZnlzcQB+AAx7HD4ddAAEd2FpdHNxAH4ADHpr7qN0AA0kYXNJbnN0YW5jZU9mc3EAfgAMyiJ3uHQABmVxdWFsc3NxAH4ADAe+VwN0AAxhc0luc3RhbmNlT2ZzcQB+AAx9DV3fdAAIYWxwaGFiZXRzcQB+AAwOEo4LdAAMc3luY2hyb25pemVkc3EAfgAM+01yHHQADSRpc0luc3RhbmNlT2ZzcQB+AAww2oGNdAAEbWFpbnNxAH4ADKZNyIl0AAlub3RpZnlBbGxzcQB+AAxlOVNWdAAMaXNJbnN0YW5jZU9mc3EAfgAMHVya3XQAD1BhbmdyYW1Tb2x1dGlvbnNxAH4ADAVAo3Z0AAlpc1BhbmdyYW1zcQB+AAx0oDGMdAACPT1zcQB+AAyfAiaLdAAFY2xvbmVzcQB+AAzq3ojKdAAIdG9TdHJpbmdzcQB+AAy9WKoKdAACIT1zcQB+AAzFXyLvdAAIZ2V0Q2xhc3NzcQB+AAwHB3NvdAACbmVzcQB+AAwknCZfdAACZXFzcQB+AAyVks3PdAACIyNzcQB+AAzXrPGKdAAIZmluYWxpemVzcQB+AAynKGwwdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBFeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAXc3RyaW5ncy5QYW5ncmFtU29sdXRpb251cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBeeHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBdAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBFTAAJaW5oZXJpdGVkcQB+AEVMAAdwYXJlbnRzcQB+AEV4cQB+AGZzcQB+AF0BdXEAfgBAAAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBGcQB+AE91cQB+AFAAAAAAc3EAfgBSAHEAfgAfdXEAfgBVAAAAAHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGV0AARVbml0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBlc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCBdXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AbnhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AWHQABVBsYWludAAEYXJnc3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4AdVsADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AZXNxAH4AdHQABUFycmF5cQB+AHp1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AdHQABlN0cmluZ3NxAH4AeHNxAH4Ae3VxAH4AfgAAAANzcQB+AIB0AARqYXZhc3EAfgCAdAAEbGFuZ3EAfgCFcHNxAH4AXQF1cQB+AEAAAAAAcHNxAH4AXQF1cQB+AJkAAAACc3EAfgB0dAAGT2JqZWN0cQB+AJ1zcQB+AHR0AANBbnlxAH4AenBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHc3RyaW5nc3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUnUqbPpPoNNLd/J4DroPpMQ2HyyU=
strings.ReverseShuffleMerge$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAw9VgLAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAANXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cM3dq6J0AAZub3RpZnlzcQB+AAz5TZhHdAAHdW5hcHBseXNxAH4ADMiw+DZ0AAdjdXJyaWVkc3EAfgAMT5qml3QABHdhaXRzcQB+AAxUmyBJdAAPYXBwbHkkZGVmYXVsdCQ0c3EAfgAMjLwDsXQAAjw9c3EAfgAMdfAgAHQADmNvcHkkZGVmYXVsdCQyc3EAfgAMZumWyXQADSRhc0luc3RhbmNlT2ZzcQB+AAx8Cj3JdAAFc29sdmVzcQB+AAwSk/s6dAAMcHJvZHVjdEFyaXR5c3EAfgAMikUhfHQABmVxdWFsc3NxAH4ADJohSpB0AAxhc0luc3RhbmNlT2ZzcQB+AAyd/A8zdAABPHNxAH4ADC1vvwR0AAxzeW5jaHJvbml6ZWRzcQB+AAze5YvQdAANJGlzSW5zdGFuY2VPZnNxAH4ADG7V4zh0ABA8aW5pdD4kZGVmYXVsdCQ0c3EAfgAMajXnf3QAAj49c3EAfgAMK74UrXQABnR1cGxlZHNxAH4ADNlCX650AANtaW5zcQB+AAyAzxmNdAAIY2FuRXF1YWxzcQB+AAyfHXCPdAAOY29weSRkZWZhdWx0JDRzcQB+AAwgPUYtdAAEbWFpbnNxAH4ADE4DKVt0AA1wcm9kdWN0UHJlZml4c3EAfgAM5FTbvXQABnJlU29ydHNxAH4ADFsAGwF0AAlub3RpZnlBbGxzcQB+AAwH40jidAALcmVhZFJlc29sdmVzcQB+AAwT/QvhdAAJY29tcGFyZVRvc3EAfgAMJvO53nQADGlzSW5zdGFuY2VPZnNxAH4ADOsErY90ABFnZXRTb3J0ZWRFbGVtZW50c3NxAH4ADHSXGzx0AAY8aW5pdD5zcQB+AAxxQ77+dAACaWRzcQB+AAyrStSWdAADbWF4c3EAfgAMOTvpQHQABWFwcGx5c3EAfgAM6ggHxHQAAj09c3EAfgAMrPvPYXQABWNsb25lc3EAfgAMOOOclHQADmNvcHkkZGVmYXVsdCQzc3EAfgAMIH/7TnQABGNvcHlzcQB+AAxKtVJKdAAIdG9TdHJpbmdzcQB+AAzIgqi8dAANU29ydGVkRWxlbWVudHNxAH4ADIWmXVJ0AAIhPXNxAH4ADK4nQXZ0AAhnZXRDbGFzc3NxAH4ADFpIeIx0ABNSZXZlcnNlU2h1ZmZsZU1lcmdlc3EAfgAM/uJzqnQADmNvcHkkZGVmYXVsdCQxc3EAfgAMOIuzIHQAAm5lc3EAfgAMoGROiHQAAmVxc3EAfgAMrmnScXQAB2NvbXBhcmVzcQB+AAzHruQgdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMI/IrknQAAT5zcQB+AAxSuuUDdAACIyNzcQB+AAzqzjatdAAIZmluYWxpemVzcQB+AAx2e6EzdAAFaW5kZXhzcQB+AAwjjnEhdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAz19ehhdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAbc3RyaW5ncy5SZXZlcnNlU2h1ZmZsZU1lcmdldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4Amnhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AmQFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AgUwACWluaGVyaXRlZHEAfgCBTAAHcGFyZW50c3EAfgCBeHEAfgCic3EAfgCZAXVxAH4AfAAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4AgnEAfgCLdXEAfgCMAAAAAHNxAH4AjgBxAH4AOXVxAH4AkQAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgChdAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AoXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AvXVyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AKp4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AJR0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+ALFbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AKFzcQB+ALB0AAVBcnJheXEAfgC2dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+ALB0AAZTdHJpbmdzcQB+ALRzcQB+ALd1cQB+ALoAAAADc3EAfgC8dAAEamF2YXNxAH4AvHQABGxhbmdxAH4AwXBzcQB+AJkBdXEAfgB8AAAAAHBzcQB+AJkBdXEAfgDVAAAAAnNxAH4AsHQABk9iamVjdHEAfgDZc3EAfgCwdAADQW55cQB+ALZwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmluZ3NzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFLq6mfB9CzMzZYlak7vetQ+b4G7N
strings.SherlockAnagram$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDhJVehAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAGHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cEScScB0AAZub3RpZnlzcQB+AAxl4c2qdAAEd2FpdHNxAH4ADBxfOVh0AA0kYXNJbnN0YW5jZU9mc3EAfgAM0FTlF3QABXNvbHZlc3EAfgAMY2djtXQAD1NoZXJsb2NrQW5hZ3JhbXNxAH4ADG0bAb50AAZlcXVhbHNzcQB+AAyW4gu8dAAMYXNJbnN0YW5jZU9mc3EAfgAMoIUVp3QADHN5bmNocm9uaXplZHNxAH4ADJARCaZ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMSyKvNXQACXN1bW1hdGlvbnNxAH4ADMJErFZ0AARtYWluc3EAfgAMXdGtynQACW5vdGlmeUFsbHNxAH4ADDvzJxF0AAxpc0luc3RhbmNlT2ZzcQB+AAyyNv+gdAACPT1zcQB+AAyjAVlvdAAFY2xvbmVzcQB+AAwNuFlPdAAJZ2V0U29ydGVkc3EAfgAM/GlVAnQACHRvU3RyaW5nc3EAfgAMg6tsvXQAAiE9c3EAfgAM9o8ApXQACGdldENsYXNzc3EAfgAMzwECP3QAAm5lc3EAfgAMQJD+k3QAAmVxc3EAfgAM/2V8anQAAiMjc3EAfgAMqwluJXQACGZpbmFsaXplc3EAfgAMru4vNHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AR3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAF3N0cmluZ3MuU2hlcmxvY2tBbmFncmFtdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AYHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AR0wACWluaGVyaXRlZHEAfgBHTAAHcGFyZW50c3EAfgBHeHEAfgBoc3EAfgBfAXVxAH4AQgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ASHEAfgBRdXEAfgBSAAAAAHNxAH4AVABxAH4AI3VxAH4AVwAAAABzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBndAAEVW5pdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AZ3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ag3VyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AHB4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AFp0AAVQbGFpbnQABGFyZ3NzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AHdbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGdzcQB+AHZ0AAVBcnJheXEAfgB8dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AHZ0AAZTdHJpbmdzcQB+AHpzcQB+AH11cQB+AIAAAAADc3EAfgCCdAAEamF2YXNxAH4AgnQABGxhbmdxAH4Ah3BzcQB+AF8BdXEAfgBCAAAAAHBzcQB+AF8BdXEAfgCbAAAAAnNxAH4AdnQABk9iamVjdHEAfgCfc3EAfgB2dAADQW55cQB+AHxwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmluZ3NzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVphubxUdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAOS9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFCRDo1+SkIrxXaIOjOqy6i559bHd
strings.SteadyGeneSolution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDAH1QRAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAI3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cFrP96x0AAhlbGVtZW50c3NxAH4ADHn2Fjt0AAZub3RpZnlzcQB+AAy68bBPdAAQcHJhY3RpY2FsTWluaW11bXNxAH4ADJr+ekh0AAR3YWl0c3EAfgAMSGBEo3QACUVMRU1FTlRfQXNxAH4ADEYh1dd0AAlzdWJzdHJhY3RzcQB+AAywV2xDdAANJGFzSW5zdGFuY2VPZnNxAH4ADLeiirF0AAZlcXVhbHNzcQB+AAzsIDqBdAASU3RlYWR5R2VuZVNvbHV0aW9uc3EAfgAM3L7/83QADGFzSW5zdGFuY2VPZnNxAH4ADBmZAtF0AAxzeW5jaHJvbml6ZWRzcQB+AAwZaaOEdAANJGlzSW5zdGFuY2VPZnNxAH4ADJgSZvF0AARtYWluc3EAfgAM/l1miXQABmRlY29kZXNxAH4ADK2R5q90AAlub3RpZnlBbGxzcQB+AAxiE1rJdAASZ2V0Q3VycmVudEV4Y2Vzc2Vzc3EAfgAM+55i/nQADGlzSW5zdGFuY2VPZnNxAH4ADBZUdHF0AAlFTEVNRU5UX0NzcQB+AAxoaT78dAAJRUxFTUVOVF9Uc3EAfgAMA3IffHQACUVMRU1FTlRfR3NxAH4ADPmal/F0AAI9PXNxAH4ADKkgD350AAVjbG9uZXNxAH4ADA0/OTB0AAxNQVhfRUxFTUVOVFNzcQB+AAzoUtaudAAIdG9TdHJpbmdzcQB+AAyCTczxdAACIT1zcQB+AAzX5vU4dAAIZ2V0Q2xhc3NzcQB+AAxanTSkdAAIZ2V0SW5kZXhzcQB+AAy9BZJAdAALZ2V0RGlzdGFuY2VzcQB+AAyIc0Y4dAAKaXNTb2x1dGlvbnNxAH4ADO0BS8x0AAJuZXNxAH4ADCEMDC50AANhZGRzcQB+AAyhT6r2dAACZXFzcQB+AAwS7CpydAACIyNzcQB+AAzMp85CdAAIZmluYWxpemVzcQB+AAyZx0M5dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAac3RyaW5ncy5TdGVhZHlHZW5lU29sdXRpb251cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgB2eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgB1AXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBdTAAJaW5oZXJpdGVkcQB+AF1MAAdwYXJlbnRzcQB+AF14cQB+AH5zcQB+AHUBdXEAfgBYAAAAAXNyAA14c2J0aS5hcGkuRGVmUr6f4ny0NmkCAAJMAApyZXR1cm5UeXBldAAQTHhzYnRpL2FwaS9UeXBlO1sAD3ZhbHVlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1BhcmFtZXRlckxpc3Q7eHEAfgBecQB+AGd1cQB+AGgAAAAAc3EAfgBqAHEAfgAndXEAfgBtAAAAAHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AH10AARVbml0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB9c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCZdXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4AhnhwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AcHQABVBsYWludAAEYXJnc3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4AjVsADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AfXNxAH4AjHQABUFycmF5cQB+AJJ1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AjHQABlN0cmluZ3NxAH4AkHNxAH4Ak3VxAH4AlgAAAANzcQB+AJh0AARqYXZhc3EAfgCYdAAEbGFuZ3EAfgCdcHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cQB+ALEAAAACc3EAfgCMdAAGT2JqZWN0cQB+ALVzcQB+AIx0AANBbnlxAH4AknBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHc3RyaW5nc3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG5vFR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA5L1VzZXJzL2FsZXgvZGV2L3ByYWN0aWNlL2NvZGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUTJ3uTuDVIDql8Xjd9FtJwUn0hL8=
source infos:
22 items
/Users/alex/dev/practice/coding/src/test/scala/codility/BinaryGapSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/samples/Solution.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/samples/SolutionSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/search/ConnectedCellSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/search/MissingNumberSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/search/SherlockArrraySpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort1Spec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/sorting/InsertionSort2Spec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/sorting/MatrixRotation.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort1Spec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSort2Spec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/sorting/QuickSortInPlaceSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/AlternatingCharactersSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramPalindromeSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/AnagramWordSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/FunnyWordSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/GemeStoneSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/PalindromeLetterSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/PangramSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/ReverseShuffleMergeSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/SherlockAnagramSpec.scala -> 
AAAAAAAAAAA=
/Users/alex/dev/practice/coding/src/test/scala/strings/SteadyGeneSpec.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWmG7mph1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAPi9Vc2Vycy9hbGV4L2Rldi9wcmFjdGljZS9jb2RpbmcvdGFyZ2V0L3NjYWxhLTIuMTIvdGVzdC1jbGFzc2VzdAABLw==
